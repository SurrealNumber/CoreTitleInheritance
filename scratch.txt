TODO: AI
TODO: Implement penalty for being over core limit

what I need:
additional button to remove core
set title as core function
    - modifier for holding if game rule needs
    - count of core holdings
    - Keep as core on inheritance? - figure out how that works
check eligible title funtion
possibly tell AI how to use this feature

scripted value for limit
trigger for checking if title is eligible
    - trigger for checking if title is core
    - trigger for checking if character is over limit
value for flat prestige loss - here should remove core titles on inheritance (make them pay again)?
modifier for overtime prestige loss (scripted) - reference variable to multiply
variable on character for # core titles
scripted_list of core titles
on_actions  strip core on title changing hands https://forum.paradoxplaza.com/forum/threads/modding-quick-questions-and-answers.1414681/page-22#post-26910318
scripted value to calculate number of core titles on inheritance
Let AI use feature- would do through creating events with ai weights.


static values: variable - immutable?
scripted_values: calculated value based on formula
variables: value stored on a scope
modifiers: add modifier to scope - essentially adds modifier on value at scope - stack additively, but modifier can be applied multiplicitavely
scripted_modifiers: same as modifiers, but can be calculated?
triggers: Seem to be essentially formulas returning booleans to be used elsewhere (eg, evaluating if someone is eligible for something)
events: pop-up event with built in ui
opinions: Opinion modifier, presumably between characters -- looks to be only between characters
relations: relations between two things - like friend etc
on_actions: essentially pulses which can be used to trigger events - events are triggered in on_action?
scripted_gui: script that can be referenced in gui modding
scripted_list: generated list of scopes
scope: essentially game object
effect: something which does things
scripted_effect: essentially a generic function which does things
rules: ?

Communicate recommendations for settings
only counties and baronies count towards core limit
only counties and baronies have cost
Can't designate duchy where you don't own land as core. Might lead to it being lost even if not desired. Out of scope of this mod.
creating convention: don't use this for base scope of environment
!!!Possible problem if checking empire tier title-no dejure liege
Do not know how to get a list of dejure children of a title if it is even possible.

PRIMARY TITLE IS CONSIDERED CORE.
Make sure that primary title is never removed from cores.
****Need to handle primary title changing
    not sure if this will break if an event changes the primary title
I THINK I AM GETTING PRIMARY TITLE CONFUSED WITH CAPITAL
!!!!Need to consider what happens if one of the titles has a different title succession law
if capital and primary title are different counties, you get both.
If primary title is not dejure above capital, get capital dejure titles up to one tier below primary title.
PRIMARY TITLE ONLY EFFECTS CORE THINGS IF YOU ARE A COUNT WITH A DIFFERENT CAPITAL AND PRIMARY TITLE
add decision to show core titles?
has_primary_title triggers.log line 2180 scopes character, landed title
variable on character will be named core_count
primary title is the only one which breaks the rules of core territories.



core flag utilizes
effects.log:
    set_always_follows_primary_heir (986)*************

Need:
gui:
-    core and de-core gui and scripted gui
    notification for core title loss?
on_action:
-    on_action for losing core title
-    on_action when inheriting core titles
trigger:
-    trigger for eligible title
-    trigger for if title is core
-    trigger for eligibility requirements
-    trigger for over core title limit
-    trigger for higher tiers breaking
-    trigger for allowed to core title
-    trigger for allowed to de-core title
scripted_value:
-    scripted_value for core limit (core_limit)
-    scripted value for core costs and refunds - flat and scaled
value:
    any constants needed - can think of as parameters
scripted_modifier:
-    scripted_modifier for monthly prestige loss - will add or not depending on game rule
variable:
    character scope variable for number of cores (core_count) - Could instead build a list of core titles and recalculate each time. like this way better - more for me to keep track of, but less iteration over lists
scripted_effect:
-    scripted_effect to apply core flag to titles
-    scripted_effect to remove core flag from titles
-    scripted_effect to remove invalid core titles
-    scripted_effect to check wiping coreness and do it
-    scripted_effect to update character with given cores
-    scripted_effect to remove/refund all core titles
scripted_list:
-    scripted_list to retrieve core titles
decision:
-    decision to see core titles
AI stuff
    
    



Flow:
character actions\events:
    designate title
        check if title is eligible
            not core
            owned by character
            county, barony, or own one title below of tier -1
        check if limit is reached
            calculate limit for character
            retreive # of cores of character
            compare
        apply cost
            flat cost - apply cost from static value (or variable prestige cost provided)
            apply modifier (scripted from number of cores)
        designate title as core
            add core flag to title
            increment any variables stored on character
    de-designate title
        check if title is core
            is core
            owned by character
            higher tiers not invalidated by it's loss
        refund cost
            refund cost (flat or variable prestige cost provided)
            remove modifier or change things it is calculated from (possibly done automatically in the next step)
        de-desginate title as core
            remove core flag
            increment any variables stored on character
    lose core title
        update character losing
            send notification
            increment any variables stored on character
            remove invalid core titles
        wipe title of coreness
            remove core title flag
character dies
    titles inherited
        possibly wipe coreness
            remove core title flag depending on game rule
        update character cores if not wiped
            check titles still valid
            initialize and increment any variables stored on character
            initialize modifier (scripted from number of cores)
            possible remove core status from titles if over limit (potential bandaid - if over title limit refund full cost and remove all titles)

AI: Low priority
    check designate on timed pulse or on title situation change
    check designate core on timed pulse or on title situation change
    
    
    
How to check if a core list is consistent?
1. check that every title greater than county is dejure liege of another one - requires going through the list twice
have to go through list twice

It looks like there are no scaled prestige values. Removing option.
It is possible that inheriting core titles will not work. In this case automatically remove them on inheritance.
It is possible that primary titles and capital chain titles will not be caught by current check for cores. Fix this if that is the case.
Need to know if x = no is equivalent to NOT = {x}
Have to be careful with special titles which do always follow primary heir (especially if they are conquered)
changing to have a core variable on the core titles, and the coring and de-coring options take care of setting the flag
don't know if CK3 likes setting previously set variables.
It is possible that the datacontext for the title is already set in gui. I will ignore the possible optimization due to not understanding how the gui language works
possibly have to refresh gui after button is clicked to swap it with the other button.


Gui Tooltip:
TITLE_MAKE_PRIMARY_TOOLTIP:1 "#T Make [TitleViewWindow.GetTitle.GetName] your [primary_title|E]#!" - line in localization
produces: Make _TitleName_ your BLUE[Primary Title]
_TitleName_ - has tooltip of title.
BLUE[Primary Title] - has reference to game concept/encyclopedia entry (I am not sure which one it is).

FIND_VASSAL_HEADER:2 "Grant to..."
FIND_VASSAL_RELEVANCE:0 "Relevance"
FIND_VASSAL_BUTTON_TOOLTIP:2 "#T $FIND_VASSAL_HEADER$#!\nChoose someone to grant this [title|E] to.\n\n$FIND_VASSAL_BUTTON_TOOLTIP_SEGMENT$"
FIND_VASSAL_BUTTON_TOOLTIP_SEGMENT:0 "You can grant [titles|E] to one of your [vassals|E], or one of your [guests|E] or any [courtiers|E] in your [realm|E]"
^ entries in localization file
produces:
BIGGERTEXT{Grant To...}
Choose someone to grant this BLUE{Title} to.

You can grant BLUE{Titles} to one of your BLUE{Vassals}, or one of your |end of box
BLUE{Guests} or any BLUE{Coutriers} in your BLUE{Realm}

Interpretation:
[word|E] <- tooltip for encyclopedia entry (most likely from game concepts, has a small icon in top left which would explain image references)
#T # <- make it into title format
\n <- standard new line
$REFERENCE$ <- way to reference another localization entry


No idea how to change localization based on game rule. Will table for now.
Possibly change over core limit warning text to say your instead of your character's name
What if the dejure parent is core, but not for you?


Looking into decision gui/localization:
start_hunt_decision:0 "Call Hunt"
start_hunt_decision_tooltip:1 "A [hunt|E] will be held"
start_hunt_decision_desc:0 "#F The untamed wilds are calling, and all manner of beasts are awaiting my spear and arrow!#!"
start_hunt_decision_go_on_hunt:1 "You go on a #V Hunt#! in one of the baronies of your realm"
start_hunt_decision_tt_header:0 "A successful Hunt will:"
start_hunt_decision_prestige:1 "You may get opportunities to increase your [prestige|E]"
start_hunt_decision_stress:0 "#P    Reduce your [stress|E]#!"
start_hunt_decision_stress_lazy:0 "#N You will not lose [stress|E] since you are [GetTrait('lazy').GetName( GetPlayer )]#!"
start_hunt_decision_confirm:0 "Sound the horn!"
^in localization file. Decision is start_hung_decision^

decision:
Call Hunt on left with Reversed subset of image on right

tooltip:
Call Hunt
a BLUE{Hunt} will be held

Decision Window:
Call Hunt <-fancy font center of top
image (most likely one defined in decision) <- full width of window
greyish-small-minor-text{The untamed wilds are calling, and all manner of beasts are awaiting my spear and arrow} <- desc
new boxlike thing 1
new boxlike thing 2
Effects - centered title like
several blank lines
<- line break from custom tooltip start
* You go on a WHITE{Hunt} in one of the baronies of your realm <- _go_on_hunt
* You lose {stress loss image} 30 BLUE{Stress} <- stress_impact from custom tooltip?
* You may get opportunities to increase your BLUE{Prestige} <- _prestige
one blank line
{red exclaimation mark in circle}ITALICS{RED{Call Hunt will be unavailable for} WHITE{5 years}}
end of box like thing 2
lots of blank
end of box like thing 1
centered
Cost:{gold icon} 67
Button with text {Sound the horn!}
notify when available box.

Interpretation:
key is reused heavily
desc goies wher it showed up in window
#X text# applies an effect to text
custom tooltip is constructed in decision
custom tooltip = x appears to be appending x to the tooltip with a new line in between
 - Unsure of new line consistency will test later and modify scripted gui based on result
Looks like one can only push with things i.e. things can only be launched from on_actions. There is no way to tell something to look for an on_action

looks like show_as_tooltip = {stuff} executes the stuff and show the tooltip of the stuff being done {some way to print things assumed}
can't find how to add numbers to descriptions. Will just try to put in desc = value.
I think there is a nicer way to filter lists, but I don't know what it is right now.
Might need to make localization for effects, triggers, and modifiers. Don't know yet.

!!!Should let character know when they cores are invalidated and destroyed.
!!change to safe_de_core_title


notifications:
I’ll start with the notifications and toasts as they are the simplest. You simply make a database entry in the common folder for your notification and then wherever you want to run it from you use the send_interface_message or send_interface_toast effect.
Want to send toast when de-coring a title. Only should occur if full refund would be given- i.e. the mod removes them for internal reasons.
Add modifier penalty for being over the core limit. Remove decoring titles which are over the limit.

Titles are only decored on:
    most title transfers
    invalid core title due to some reason (change capital or lose title)
!!! No on_action for changing capital or primary title.

-Removing limitation that one cannot add core titles beyond the core limit.
-Add check that child title or parent title is actually owned by this character

-Toast when a title is de-cored (by mod)
-Alert when over core title limit

send_interface_toast = {
    type = message type <- defined in game/common/messages/
    title = localization thing
    desc = localization thing
    left_icon = Seems to be character scope
    right_icon = also seems to be character scope
    show_as_tooltip = { can be used like before presumably to show modifiers effects and the like
    }
    can also put modifier and effects here and they will presumably show up
    custom_tooltip = localization thing
}


Figure out how to put values into encyclopedia entries dynamically.
!!Might have to change scope.trigger to trigger = scope
Might be able to remove if from every_list and instead use just limit
can probably use root instead of scope:this_title in most places.
It looks like some localizations can use the scope to be localized. things like character_scope.GetUIName etc.

RUNNING GAME:
IT DID NOT CRASH!
Decision has empty text 
-and image.
-core_titles game concept is broken
Title and confirmation things in decision are broken. Most of description seems to be working
Upon decison being used toast for core titles lost was triggered. I am king of france in 1066 with no time passed.
No event poped up for the decision.
-parent game concepts apear to be shown in the top right of the entry for the child.
took titles and vassals from brittany and nothing visible happened.
-core title cost list part of description is all bold italics. Look horrible. Same with core title limit.
core title cost game concept does not have an icon.
For the duchy of brittany both the designate core and de-designate core buttons are present. Clicking them did nothing visual.

Checking afterwards what the game rules were:
Overtime Core Title Cost
Half Domain COre Title Limit
Persist Core persistence
Not allowed AI core designation.
description for ai core designation allowed is broken.


Might break if capital is a barony and the primary title is a different county
does not take into account title succession laws
Need to prevent prestige from refunds from giving fame
Need to deal with the situation where the de jure duchy title does not exist, or is held by a different character (similarly for other tiers)
Possibly remove the ability to core titles of the highest tier.

Running game 2nd time:
Title and on click for decision missing
both designate and de-designate are showing up again. - also both showing up for other character's titles, and for capital titles.

******Making sure I don't for get pattern:*********
save_temporary_scope_as = this_title
scope:this_title available everywhere.

Run 3:
remove_laws possibly button tooltip example.
both buttons still appear on all titles, including primary title. Are valid in both cases.
object browser.
same problems with decision text

Adding test event and decision.
Run 4:
test decision has the same missing localization.
test decision triggered core titles were removed -both of them did
putting into the console event cti_test_event.0001 fired cti_manage_core_titles_event.001 and triggered core titles were removed. BUT NO EVENT WINDOW.
^ makes me think part of the problem lies with the events.

It looks like localization in events MUST be of the form event_name.numbers.thing
same problem occuring
figured out problem with namespace.

It looks like for decisions it should be ai_check_interval, not ai_check_frequency as it says in the .info
In events next line in localization will not trigger a bullet point, while custom_tooltip= will trigger a bullet point.
It looks like what is failing now is recalculate_cores


Looks like having if and else at the base is not valid for scripted triggers. need to use trigger_if or trigger_else
tried to fix up triggers a bit.
still same problem with event



effects:
every_heir_to_title
ordered_heir_title
set_destroy_on_succession
set_special_title
order_title_heir
every_heir_title
every_held_title
set_always_follows_primary_heir

Data Type Title has function IsPrimary

is trigger has_primary_title.

exists trigger any_in_de_jure_heirarchy
exists trigger any_in_de_facto_heirarchy
exists any_this_title_or_de_jure_above
If can't find flag I want (always_follows_primary_heir), then check if seeing if the list of heirs only has one element would work.
Need to test to see if it is an actual flag.
It loooks like flags are only on characters. I will check this.

any_title_heir has scope of title
when setting variables (and presumably elsewhere) in order to use add and the like one must go 
value = {
    value = 0
    add = x
}


set_variable =
{
name = test1
value = {
value = 0
every_title_heir = {add = 1}
}

}

Looks like many failures return yes, or more accuratly it looks like none evaluates to true

c_brie_francaise (6708)
214/18558 - character
always_follows_primary_heir is a line in the save game, and can be set. It looks like unless it is set titles do not have it

game_rules are in settings, so they should be able to be changed.

Could and probably should change to have a curated core title list on the character.
de_facto_liege and de_jure_liege are titles.
there is a capital_barony line in the save game
CANNOT ACCESS always_follows_primary_heir FROM SCRIPT!!!! - Infuruating
Moving away from using this means special titles like religious heads are not handled.
^ actually only required 3 changes to code. Not as tedious to change as I thought
is_shown (and probably other places as well) has an implied AND = {}
can add custom_descriptions to triggers
Looks like I might need trigger = yes if I want checking a trigger to work.
Sooooooooooooooo many syntax errors. I wish there was a better comprehensive guide. I should probably contribute if one is there, but it is beyond me to create one.

Looks like for scripted modifiers there are 4 things one can do with them/give them.
1. modifier = {} straight value, used in script for things like comparing chances also takes factor
2. opinion_modifier = {} modifier to opinion, I think it is applied to characters and effects their opinion (presumably has way to specify who it is between)
    looks like it can take a trigger for when it applies. It also has a who and target arguements
3. compare_modifier = {} takes factor and multiplier
4. compatability_modifier = {} takes who, compatability_target, min, max, and trigger

modifiers can use first valid. they can also have `desc = localization_thing`
exists has_opinion_modifier
can add to list without initializing
exists add_character_modifier - the same modifier does not appear to stack. - takes name = <> time = int
Esists remove_all_character_modifier_instances takes name <- seems to suggest that modifiers can stack.
remove_character_modifier takes name
scripted_tests_recalculate_character_modifier

buildings can have character_modifiers
It looks like it is impossible to stack modifiers. The only way around this I can see is to create a dummy building.
POD mod (about as close to an official mod as one can get) has tiers of modifiers, but no stacking modifiers.
possibly just do it without a modifier and be carefully?

over core limit modifier has only a small finite set of values.
Cost overtime for cores has a potentially infinite set of values (though really limited to under 1000 due to the number of counties.) 

It makes sense that modifiers should not be dynamic/dynamically generated. It is very expensive performance-wise. But to not allow stacking modifiers makes less sense. It would require being a bit more careful, but should be doable relatively easily without a large performance overhead.
Look into possibility of province/county/title modifiers.
exist dynasty modifiers
exist house modifiers
exist scheme modifiers
EXIST COUNTY MODIFIERS:
    add_county_modifier
        add_county_modifier = name
        add_county_modifier = {modifier = name days/weeks/months/years = int}
        supported scopes is landed title <- will need to check if this is in fact only counties, or if it also supports other titles like baronies. Could use it to add text to titles as well with possibly dummy modifiers.
    remove_all_county_modifier_instances - Remove all instances of a modifier from a county
        remove_all_county_modifier_instances = name
        Supported Scopes: landed title
    remove_county_modifier - Remove a modifier from a county
        remove_county_modifier = name
        Supported Scopes: landed title
EXIST PROVINCE MODIFIERS: - looks to be associated with a barony
    add_province_modifier - Add a modifier to a province
        add_province_modifier = name
        add_province_modifier = { modifier = name days/weeks/months/years = int }
        Supported Scopes: province
    remove_all_province_modifier_instances - Remove all instances of a modifier from a province
        remove_all_province_modifier_instances = name
        Supported Scopes: province
    remove_province_modifier - Remove a modifier from a province
        remove_province_modifier = name
        Supported Scopes: province

Need to find out if county titles have an associated province. Also it looks like county capitals cannot be moved.
Idea now:
county -> county and province
barony -> province

PROVINCE MODIFIER SEEMS LIKE THE WAY TO GO.
TIERED MODIFIER FOR THE OVER CORE LIMIT PENALTY.

One interpretation is that the titles which count to core limit are exactly core provinces/baronies. <- it is more succinct to say that the same things which count to domain limit count to core limit
THERE IS A GAME CONCEPT FOR IT -> HOLDING
any_directly_owned_province <- might give holding number, or restrict to holdings
^not as useful, given it would then have to be restricted to core titles. 
set_variable =
{
name = test1
value = {
value = 0
any_directly_owned_province = {add = 1}
}
}

My mod currently has no grace period. I should probably look into adding it.

comments in triggers.log seem to suggest that holding and province are equivalent. This is useful to know. (Though they aren't quite equivalent, as I think one is a building or title, and the other is a map tile)
recalculating core titles from the decision _should_ never cause inconsistent core titles to be lost.
figure out how to do bullet points. especially applicanle in game concepts.
capitals and the like will have a monthly prestige cost, but probably should not.
I SHOULD GIVE PROVINCES WHICH ARE CORE TITLES A SMALL CONTROL GROWTH BUFF.
Really have to figure out how to do dynamic encyclopedia entries.
It is possible to be over the core limit without including any designated core holdings. Will have to address this.
NOTE ABOUT CODE: core_count means core_holding_count. Same with core_limit and core_holding_limit
Have to put in something to trigger over core limit alert.
Possibly consider having the modifiers hidden so they only show up for the character.
it looks like most province modifiers are actually meant for different scopes than provinces.

When to apply province modifier?
    1. When applying the cost of coring.
    2. When recalculating the core titles.
    4. At start of game.

Should add check for if the ai can designate core titles. If they can't then I should disable the functions from applying on them.

I don't know of an on action for changing capitals or primary titles. These are both events which should trigger core titles to recalculate, but I don't know of the on actions for them.
I realize that recalculate is called alot, and the initializers it calls replace what is there. It should be good enough.
Due to how the modifiers work I have to apply them at the start of the game and initialize them.

At start of game things to possibly use:
every_barony
every_county
every_independent_ruler
any_kingdom
any_living_character
any_player
any_province
any_ruler <- count tier and above

IT IS else_if NOT else if


Trying to comment out things until it works.

Removing while clause - assuming it does not work.
looks like passing yes or no won't work. Have to pass a trigger -i.e. always or trigger = {always = no} <- need to verify this
look into possibility of using hidden_effect for options in events.
LOCALIZATIONS CAN USE SCOPES i.e. scope:xxxx exists in the localization one can have [xxxx.SomethingOnDataTypeToReturnString]

Things which exist:
remove_character_flag
remove_localized_text
remove_from_list
remove_global_variable
remove_list_global_variable
remove_list_local_variable
remove_list_variable
remove_local_variable
remove_variable


Can probably get things that are refered to with things like GetPlayer or GetTitle and the like, but will not for now.
For activities there is a WriteListOfAcceptedGuests.
Looks like there is a CharacterSelectionList data type
InteractionOtherEffect has some mention of lists.
There is a SaveGameAnalyzer data type

To get always_follows_primary_heir aspect of titles, Maybe hijack the autosave and read the save file?
the Scope datatype has a GetList function
Esists the Title data type
Esists VariableList and VariableListEntry (and some more) data types
interesting
EventTargetSetupContext = {
		AccessVariableLists -> VariableListStore
		AccessVariables -> VariableStore
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

Looks like those things won't work. Looking into creating a custom widget to list titles.


Title view window looking into for listing/showing titles.
in the shared gui folder, lists.gui contains types Scrollbar and as a subset of that type scrollbox. The title window is overiding the scrollbox contents to use the overall scrollbox format.
dejure_tab from title window:
some rules, centered text heading then a scrollbox.
In the scrollbox the content is a vbox.
vbox uses datamodel DeJureVassalGroupItem.GetTitleItems
it has some layout options.
item bloc -> presumably for the vassal group
It prints the [owner of the title]?
defines an item block.
The item contains a button_standard_list. The data context for this is TitleItem.GetTitle
For the title it sets up the onclicks for right and left clicks as defaults for coat of arms. It then defines the tooltip widget as the standard one for titles.
The button_standard_list contains a hbox which has contains a small coat of arms for the title and the name of the title.

It looks like how lists work is that you set the datamodel to be something with items in it, define an item block, and then it will display that item block for every item in the list.
There are global promotes? and global function available in the gui language.

It looks like the gui has a variable system, and one way to acces it is GetVariableSystem(.Exists, .Clear, .Toggle, .Set, .HasValue, )
There is also an ObjectsEqual

Can I re-implement the core title checks in the gui system?
For titles I have IsPrimary, IsBarony, HasHolder, HasLaws, IsHeldBy, GetTierAsName+several similar tier things, GetHolder, MakeScope
Can get some list of titles, MakeScope, and pass to a scripted gui to determine if it is core or not.
global function primary_titles, global function titles, GHWTargetWindow has GetTitles. CharacterInteractionConfirmationWindow has GetTitles, Character Window has get Titles,
MyRealm window has GetTitleSuccession
SuccessionEventWIndow has GetInheritedTitles and GetLostTitles

Places with GetTitles:
GHWTargetWindow
CharacterInteractionConfirmationWindow
CharacterWindow
CreateClaimantFactionAgainstWindow
FindTitleView
LeaseOutBaroniesWindow
SuccessionEventWindowLostTitlesItem
SuccessionLawChangeWindow
TitleSuccessionItem

Might be better off modifying the character view to display core titles.
Sadly succession event is not an actual event.

It looks like I will have to modify the character view.
Can define windows and call them from elsewhere.
Will focus on modifying the titles expanded section of the character window.
As long as I am there, I will try to put core limit below domain limit.
Looks like a little head of faith icon can appear below the domain limit.
I think I want to add an entirely seperate line bellow claims. It will not show the core titles unless clicked, but when clicked it will show them in the manner that clicking on a title does, but split up by sections.
While I am at it I might want to add something to the domain window. and the county/barony view window. <- features to be added later.
Alternate option would be to add it to the domain tab of the my_realm window thing. Or create a new tab in that window.
Question of should other players/characters be able to see which titles are core?
Answer: Yes. It is important for multiplayer or if the AI eventually uses the feature. Otherwise there will be missing information. It should go in the character window for this reason.
expand seems to be a block that will expand to fill up space if there is some.
Tight interface, have to squeeze it in there. Barring further redesign I think I can only add the small thing at the bottom and push the rest up. Space will come from ...
portrait and background at top?
Traits being slightly smaller?
There is always room next to where it says titles and where it says claims.
There might also be room next to where it says claims - a bit more because have the space above and below.
Could put next to claims at low priority? - Not all characters have a claim. Could also put in a scroll bar, but want to avoid that.
Replaces claims if they are not present, if they are eventually collapses to just the right part of the claims window.
Examples: Always assume there are titles.
______________________________________
|n Titles                +k|         |
|T T T T T T T             |         |
|j Cores                 +w|Diplomacy|
|T T T T T                 |         |
======================================

______________________________________
|n Titles                +k|         |
|T T T T T T T             |         |
|j Claims   | m Cores    +w|Diplomacy|
|T T T T T  | T T T T T T  |         |
======================================


______________________________________
|n Titles                +k|         |
|T T T T T T T             |         |
|j Claims   +q|  m Cores +w|Diplomacy|<- can't tell that the titles there are cores.
|T T T T T T T T T T T T T |         |
======================================


______________________________________
|n Titles                +k|         |
|T T T T T T T             |         |
|j Claims   +q|  m Cores +w|Diplomacy|I like this
|T T T T T T T| T T T T T T|         |
======================================


__________________________________________
 Ban|n Titles                +k|         |
 ner|T T T T T T T             |         |
  D |j Claims   +q|  m Cores +w|Diplomacy| How to fit in core limit if it shold be fit in
  h |T T T T T T T| T T T T T T|         |
==========================================

Core limit is not crucial information.
I should add a core titles tab to my_realm to give that information and give some management options.
Essentially the event is now irrelevent and being replaced by proper gui.

Scopes have a GetList function. Might be able to use that and items. Looking into the character window change first.
No idea what the down part of a vbox does.
max titles depends on other factors
all are instances of vbox_titles_claims_box defined at bottom of file.
different title boxes to display.
The different versions only differ in the cutoff for the number of titles and claims and related factors.
Conditions for displaying:
Overall box (vbox)
if no diplomacy or faction -> 1st one 13
if diplomacy then in hbox with diplomacy.
    no faction and diplomacy <=4 -> 2nd one 10
    no faction and 4<diplomacy<=6 -> 3rd one 9
    no faction and 6<diplomacy<=8 -> 4th one 8
    no faction and 8<diplomacy -> 5th one 7

Will have to put in some stuff to make limits play nicely when cores or claims are not present.
What happens when claims but no titles? - only claims display (still one row)
What happens with factions? - I don't see a difference.
Plan now: as above, but in case where titles is missing below claims instead. Start by always having it split with claims. (and restricting claims to half the size)
might have to use variable system to deal with some of the on click things in the gui.
Possible alternative: add icon to cores - like title laws icon. <- subtle. Less intrusive. Don't have to deal with character window. I like it.
Looks like the title sub icon is added at stages other than the title coat of arms stage. This means to change it I would have to change those windows.
Goint with the small icon I would want to probably ideally want to use a flat metal crown texture or interface/icons/event_types/type_magesty or type_generic.
Or icons/flat_icons/army_raise_assigned or go_to_my_capital or heir or mapmode_duchy or mapmode_empire or war_outcome_victory or
Or icons/war_status/ war_won_icon
Or icons/map_icons commander_is_leader or 
Or icons/message_feed/county_corruption or
or icons/portraits/hier or heir_small or me or me_small
Or icons/religion/hellenic
Or icons/ commander_is_leader*** or

Based on the implementtion the small icon would actually require touching more files and display the information less clearly.
Will do the character window idea.
When there are no titles, there will be no core titles. Things will work out then (just need to get limits right).
When there are titles but no claims it will also work out correctly.
What bothers me is that the titles will be repeated.

New Plan:

______________________________________
|n Titles    +k   m Cores  |         |<- same fade for cores as for title.
|T T T T T T T             |         |
|j Cores                 +w|Diplomacy|
|T T T T T                 |         |
======================================

Might want to change to long fade like in the text below for children, siblings etc.
I think I want:
f|n Titles   +k f|Cores (number) <- again, like the ones below. Also want font color like diplomacy, less obtrusive.
Copy most of text stuff from diplomacy.
The main or onl difference in the text for diplomacy is that Title links to the encyclopeia, and diplomacy does not.
Copied from above GetVariableSystem(.Exists, .Clear, .Toggle, .Set, .HasValue, )
there exists SelectLocalization( bool, loc1 (true), loc2 (false))
It looks like for the get variable system toggles, it can be toggled on or off, and exists checks for the thing being toggled on.
Most likely have to put in the variable system conditions elsewhere. Need to hide others when selected, and hide this when others selected.
Whole relations/family etc hidden when one of the other tabs is open.
can put in multiple on-clicks.
Will hijack the is titles expanded to only have to deal with two places.
down = when butotn is suppressed.
two versions of core text - One for title window open, the other for the title window not.
title text - add on click to clear toggle.
core text, title on, core on - toggle, toggle <- core displayed
core text, title on, core off - none, toggle <- title displayed
core text, title off, core off - toggle, toggle. <- other/none displayed
core text, title off, core on - toggle, none <- other displayed, core not toggled off
Will need core text for equal, and both non-equals.

What will the breakdown be by?
Want core by cti and other core reasons. - assume the player can figure out what is a holding.
cti, capital chain, primary title, special.
special will most likely never be visible.
capital chain and primary title should be mutually exclusive unless the capital is the primary title.
^ Note that is NOT equivalent to being a count or baron.
primary title and capital chain always visible. Except will hide both when equal and show different category.
cti core titles visible only if there is a cti reason core title.
might have to remove gridbox from primary title/capital and primary title.
Just noticed there is expand none. It would not have been all to useful. It would not reduce the number of cases.
IN GENERAL I THINK I SHOULD USE DE_FACTO INSTEAD OF DEJURE.
For titles there is GetDeFactoLiege, GetDeFactoTopLiege, and GetDeJureLiege. None of these are recursive.
Will do the core limit very much like the character window does domain limit.

**********************I am considering having icons/commander_is_leader.dds as **the** symbol for core titles.
**********************^ Decided to do this. I like the icon, and think it works well enough for the purpose.

Because I am throwing in the core titles expanded window only shows for alive, landed chracters, it might unexpextedly show up at some points.

Scripted gui things needed:
    tooltip for core limit box <- should probably include penalty.
    is over core limit for core limit background
    text A/B for core limit.
    is capital chain for displaying cc titles.
    are any cores special for displaying special section
    is a core special for displaying special titles
    are there any cti cores
    is the title a cti core
    are there any core titles<- probably actually not necessary because at a minimum the primary title and capital are cores. But possible title succession laws funkiness so will want. have to change conditions for showing core title tab.
    are there more than 1 core titles?
    number of core titles
    
-Scripted guis to make:
    core limit box
        tooltip - character
        bool is over core limit - character
    capital chain character
        bool multiple capital chain - character
    capital chain title <- not necessary to split, but seems better to do it for consistency.
        bool is capital chain - title
    special cores character
        bool are any special cores - character
        bool multiple special - character
    special cores title
        bool is this special - title
    cti cores character
        bool are any cti cores - character
        bool multiple cti cores - character
    cti cores title
        bool is this cti core - title
    core title text line
        bool any core titles - character<- might also be used elsewhere.
        bool multiple core titles - character
Custom localization or like to make:
    core limit
        text A/B - character
    number of core titles
        self explainatory

What do I have to work with in a scripted gui?
    scope
    saved_scopes
    is_shown - returns bool
    is_valid - returns bool
    effect - can have tooltip or call effects
    could possibly use custom or scripted localization to do the text.
These are the only functions on a scripted gui:
ScriptedGui = {
    AccessSelf -> [unregistered]
    BuildTooltip -> CString
    Execute -> void
    ExecuteTooltip -> CString
    IsShown -> bool
    IsShownTooltip -> CString
    IsValid -> bool
    IsValidTooltip -> CString
    Self -> [unregistered]
}

Localization needed: # possibly also need singular versions as well and code to support them.
    CV_CORE_CAPITAL_PRIMARY
    CV_CORE_PRIMARY
    CV_CORES_CAPITAL_CHAIN
    CV_CORES_SPECIAL
    CV_CORES_MOD
    CV_CORES_CAPITAL_CHAIN_SINGULAR
    CV_CORES_SPECIAL_SINGULAR
    CV_CORES_MOD_SINGULAR
    CV_CORE_TITLES_HIDE_CTT
    CV_CORE_TITLES_SHOW_CTT
    CV_CORE_TITLES
    CV_CORE_TITLES_SINGULAR
    CV_CORE_TITLE_TAB_HEADER


******************COUNTY != Barony, capital of a county can be moved and is a barony in it.*************************
******************all titles in capital county are passed together**************************************************
This means a character can have up to 6 core holdings just from their capital county. Have to find a way to not penalize this.
I think the way to do it is to say that the capital county only counts as one core holding.
***********Could also change it so that core holdings is actually core counties. - This would make sense actually as a county is currently the smallest inheritable unit.

Lots of inefficiencies with going through the list of core titles. This can be dealt with later.
I assume that datacontext is essentially saying that you are setting the global/datatype object of that type to what is specified.
Possibly add an opinion penalty to being over the core limit.

Scripted gui:
in is_valid:
custom_description = {
text = "stuff(possibly trigger_loc)"
subject = scope
trigger
}
^ This gives a custom reason for why the decision is not valid in tooltip

customizable location seems to be mainly to differentiate between the elements of the same class of thing or to randomize between equivalent words.
I am using [xxx|V] asuming it mean value, but apparently that is not true. I have no idea what it means.
After a regex I have found in between the |]:
E - encyclopedia
U - seems to be mostly for ui names or the like
0
V - no clue used for all sorts of stuff
1
2
P
L - seems to be mainly for traits
D
N
no |x at all

trigger localization seems to be about getting first, third, etc person correct for triggers.
Will have to to the things I thought could be custom localization in the localization system.

visible = "[AND(ScriptedGui.IsShown(GuiScope.SetRoot(CharacterWindow.GetCharacter)).End, And( VariableSystem.Exists( 'cv_expanded_core_titles_tab'), CharacterWindow.AreTitlesExpanded )) ]"
worst case senario booleans being equal is equivalent to (A and B) or ((not A) and (not B))
possibly can use script things in localization language. Will not use unless see confirmation.

AND(ScriptedGui.IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter ).End ), Or(And( VariableSystem.Exists('cv_expanded_core_titles_tab'), CharacterWindow.AreTitlesExpanded ), And( Not(VariableSystem.Exists('cv_expanded_core_titles_tab')), Not(CharacterWindow.AreTitlesExpanded) )) )


In script replacing the value core_limit with val_core_limit
.Var() is actually used frequently. I was just looking for GetVariable, and not finding that.


#[And( Character.IsLocalPlayer,
    #.AddScope('viewing_character', Character.MakeScope)
    #saved_scopes = {
    #    viewing_character
    #}
    
Possibly change increase = trigger = {always = no} to increase = {always = no}

    if = {
        limit = {$INCREASE$ = yes}
        set_variable = {
        name = dummy
        value = $COST$
        }
    }
    
Clicking on titles in the character view will not act as intended if the expanded core titles view is open.
Leaving character view or going to a new character un-expands all of the views.

Having both designate and de-esignate buttons visible can exapnd the interface to the point where it stretches off the background.
It looks like the problem is that the grids are keeping the invisible titles.
It appears that gridboxes determine the number of rows and columns and their places at the beginning. Setting some things to be invisible will not help with that.
dynamicgridbox appears to be slightly better or at least behave differently.

fixedgridbox = {
    name = "special_titles_box"
    datacontext = "[CharacterWindow.GetCharacter]"
    flipdirection = yes
    addrow = 90
    addcolumn = 270
    datamodel_wrap = 2
    
^this was there before.
Removing it and letting titles list one by one. Good enough for now.
It is possible to use expanded traits in character window. It appears to be unused for now.
what happens if a county you do not stand to inherit contains a barony which has always_follows_primary_heir = yes? - It does nothing. Counties are the smallest unit of inheritance.

Currently I believe that everything  I want to put in is there at least to some degree (but might not be working or need updating).
TODO:
x Logic - change from holdings to counties - baronies are meaningless in terms of inheritance.
x Logic - ignore baronies.
x Logic - change dejure to defacto (will mean that creating a duchy title between owned county and kingdom will break kingdom. Think about this. Also check what happens if owned county is in vassal's duchy.)
Logic - update for title succession laws
Logic - update for changing capital or primary title.
x Logic - un-comment commented out sections
x Logic - automatically core created titles inserting into middle of heirarchy.
x Localization and game concepts - change to reflect departure from baronies.
~ Localization - add missing localization.
x Interface - Add decision for decoring all core titles.
Debug

NOTE Ignoring baronies means IGNORING them. They are not to be considered in the logic.
de-facto and de-jure can refer to titles owned by other characters. Need to be careful about this.
Title succession law titles will never be considered cores.
need to think if there are cases where core title variable should be changed to no, but set_always follows_primary_heir should not be set to no.
Is there ever a case where I should not use safe_de_core_title? -- No, merging into de_core_title. - only case this would occur is if the variable is cleared.
continue seems to actually be when should I continue. Some descriptions seem to suggest that it is when to stop.
When I clean up my code I should be sure to change to utilizing assumed ands for triggers and limits.
assume that continue checks for the next title.
will have to find in files for holding and for province and purge.
Declaring head of state special - from what I saw these titles have the flag always_follows_primary_heir.
Look into holy orders and mercenary companies.

found this note in the code: # interaction effects are executed for all clients, make sure to open the window only for the actor
^worth keeping in mind.

Can't find way to expand core titles tab in character view from important_action\alert
Unsure of how to open decision window for specific decision.
looks like lists any_ can have optional count parameter.
Looks like list every can have alternative limits.

the format every/any_in_list = {
    list = list_name
    limit = {limit}
    add = x/trigger = yes
}
^ looks like this format is needed for scripted values.

Exist NOR, NAND which are equivalent to NOT = {OR/AND = {}}
It looks like there is a has_variable trigger.

Keeps on complaining about this wherever it shows up.
[23:02:56][jomini_effect.cpp:557]: Unknown effect = at  file:  file: common/scripted_guis/cti_title_buttons_scripted_guis.txt line: 28; designate_core_title line: 3
[23:02:56][jomini_effect.cpp:557]: Unknown effect INCREASE at  file:  file: common/scripted_guis/cti_title_buttons_scripted_guis.txt line: 28; designate_core_title line: 4
[23:02:56][jomini_effect.cpp:557]: Unknown effect COST at  file:  file: common/scripted_guis/cti_title_buttons_scripted_guis.txt line: 28; designate_core_title line: 5

Seems like something might actually be going wrong in set_title_core. Switching order causes it to complain about else\else_if not following if (when it is)
looks like effects might have to be called with effect_name = something. Looking into.
Looks like you do have to. use = yes unless additional things have to be added.
It looks like CK3 does not like recursion.
Down to the only error being complaining my core_title_item list does not exist.
TODO:
Debug
Logic - update for title succession laws
Logic - update for changing capital or primary title.
Localization - add missing localization.
Clean up code
x Logic - find replacement for removed recursion. (used while loop)
Gui - Implement janky filtering gridbox?

replaced exists = var: with has_variable = 
possibly add way to manually recalculate cores.

Save: TestGame
both desigate and de-designate core are still showing up.
Creating the duchy title triggered removing invalid cores. Should not have happened.
Duchy should also be core due to being de-facto above capital.
Destroying the duchy also triggered it.
Usurping title also triggered. it. Both buttons also still showing up on other character's titles.
Need to be careful that no more than three buttons are in a row on title screen, otherwise it stretches it.
Creating Empire of italy triggered removing cores
Still no capital chain except for county of capital appearing.
Special Core Titles still showing up both in singular and plural.
Looks like there is plenty of error logging for me to look at and debug.
It looks like root is the root of the calling interaction or event NOT the root of the code block. Will have to fix many things to work with this.
Unknown new error: promote returned nullptr. <- If I had to guess, I probably for got to check for a variable existing before using it somewhere.

New duchy over capital county is added as designated core, NOT as being part of tha capital chain. Still triggers the removing cores toast.
Still same effect after checking to make sure not to designate it if it was a core not due to cti.
Suspect at this point that is core is not picking up on non-cti cores correctly. <- guess was correct. Anything that is above county tier is automatically a core.
Shoudl change text from de-facto above capital to capital and de-facto above. Also when singular it is just capital. Should fix that localization.
The de_facto_liege for my capital appears to be either my highest tier or primary title (I am not sure).
For duke vassal, county -> his duchy, and duchy -> my kingdom (NOT empire)
My duchy also points to the empire of italy.
Same occures for county under vassal held duchy.
Want to check de-jure, and check to see if it exists, and check to see if you own it. Check up if dejure does not exist.
If dejure exists, but is not owned by you, check de-jure up until reaching primary title tier.
if reached primary title tier and it is not under you, in my model of de-facto heirarchy it would be a child of your primary title.
Auto create core when:
1. my model of de_facto title above it is core, and a de_jure child is core.
2. as a result of above if primary title tier, do not auto core.
3. Also as a result of above, do not auto core counties or baronies. (though they should never be created)

For the capital chain, it is strictly de-jure.
Senario: Emperor of Italy, King of Italy, King of Romagna, no holdings in Kingdom of Italy or Kingdom of Romagna. No other kingdoms or empires.(implied by this is that the capital is elsewhere.)
Should the character be allowed to designate one of the kingdoms as core? <- I feel like they should be able to designate the "primary" kingdom as core.
If so which one? <- One which is de-jure capital of empire?
                         ^What about if it was the Byzantine Empire with all other things being the same. <- mo de-jure capital kingdom.
Requiring that one has at least *one county* de-jure under a title to declare it as core is not to stringent of a condition.

Auto-coring and eligibility of titles will go back to de-jure. Senarios where it would make sense to have a title which you hold no de-jure territory under as core are covered by that title being your primary title.
when checking for core loss, we are looking for titles which are de jure leige which do not have a child title chain excluding the current title.
If possible would like to do this: go to my version of de facto liege. Check for a my version of de facto child which is core.
tricky situations: de-designating county, ruler is emperor. Duchy above does not exist. Kingdom above is core, and has :
1. a different de-jure duchy is core.
2. a different de-jure county without duchy above existing is core.
3. different de-jure county is core with duchy above that is not core (and there are no other cores de-jure below kingdom)
Desired outcomes:
1. will not break.
2. will not break.
3. will break.

look for dejure as well. Seem to be some with that instead (probably developer typo).
To work with have:
any\every\ordered\random_in_de_jure_hierarchy - iterate from self down all the way (can specify a continue or limit)
any\every\random\ordered_this_title_or_de_jure_above - iterate through this title and all dejure liege titles.
is_de_jure_liege_or_above_target - self explainatory <- need to make sure it does not trigger on itself.
target_is_de_jure_liege_or_above - self explainatory <- need to make sure it does not trigger on itself.
any\every\ordered\random_realm_de_jure_xxxx - all de-jure ot title in the character's realm
ordered\random\every_de_jure_county_holder - iterates through characters
ordered\random\every_de_jure_top_liege - iterates through characters
any/every\ordered\random_dejure_vassal_title_holder - iterates through characters - all vassal holders of title <- don't know what this description means
set_de_jure_liege_title - not that relevant here

could do if holder= chain to get to my definition of de-facto liege (I think)
From there excluded child search


I wish I could define a function which returns a scope.

auto coring occurs when child chain is core and my definition of de-facto liege is also core <- these are the conditions for when decoring a title will break a chain.

Creating titles dows not always cause toast now.
Need to change localization for de facto above capital to de jure above capital.
designate core title is not working. Will look into.
!= cannot be used when comparing two objects. same with <

Every title (including those you don't own) still has both buttons. Looking into this next.
nullptr is returned after opening the title window.

IT APPEARS TO BE WORKING (but missing _a_lot_ of localization)


TODO:
Debug
Logic - update for title succession laws
Logic - update for changing capital or primary title.
Localization:
    trigger and effect localization
    broken localization
    capital chain single and plural versions
    fix special cores always showing up.
    update de_facto game concept
Clean up code
x Logic - find replacement for removed recursion. (used while loop)
Gui - Implement janky filtering gridbox?
All - implement way to remove system upon single heir succession.
Misc - Make AI

has_title_law - have given title-specific law
has_title_law_flag - have title-specific law with given flag
.HasLaws in gui language
unclear what the difference between the two in scripting language is. Also looks like they both need to be fed a specific law.
Looks like difference is between specific laws and law groups.
Flags seen: elective_succession_law, advanced_succession_law
^ unclear if the scripting things also consider the realm law when checking.

Possibly find a way to iterate through all possible title laws. That or find a way to use the gui system in script.
I can do that through a scripted gui, but not in the way I need to.
according to wiki, only duchy and above titles can have title laws.
It appears that currently the only title laws are for elective succession, and the only realm laws are for partition or single heir.
^  makes sense, but why can't single heir have ellections?
head of faith specialness seems to come from two places. when defined or made, and the head of faith succession laws.

What is the difference between player_heir and primary_heir
There is a gui MyRealmWindow.GetSuccessionExceptions
MyRealmWindow.GetTitlesCanVote

Found what looks like a bug in the base game. Kingdom of Italia is primary title with elective succession. Kingdom of italy has no title laws. Kingdom of italy does not show up as going to brother who is primary heir in my_realm tab even though it says he will get it in title window.
^ Kingdom of italy does not show up at all.
^ kingdom of italy had title succession law, but same as realm. Most likely this caused it to not show up anywhere.
^ not going to look into further here.

following is stated in _laws.info
Elective is currently only title succession.
Partition is currently only realm.
Single heir can be both.

If single heir and same gender laws as primary title, it will be put into general succession. Otherwise it is treated seperately.
To check for title laws: 
If they have the flag elective_succession_law then they are title law.
If they don't have flag advanced_succession_law they are realm?
If advanced check if same gender law as realm (somehow).

If primary title has other successor of your dynasty, your primary heir will be them. Flag always_follows_primary_heir still works. Capital and de-jure above also pass to them.

there does nor appear to be a way to get the realm or title laws.
exists has_realm_law.

This is disapointing - I cannot deal with for instance mod made title or realm laws. I can have to manually check them.

Outline of check for title laws:
is flag elective -> yes
is flag advanced -> x
else -> no
x - for each gender option, realm has and title has (no -> yes)
for each single heir option, realm has and title has (no ->yes)
no
If there was a list of title laws this would work out.

Need to check if titles when asked laws will give realm laws if they have none.

Before I proceed, what would the effect of title succession laws be?
    cannot core. <- seems reasonable.
    ^ means if primary or in capital chain must exclude. or special?

Don't want to deal with this now. Will create issue on github, and leave be for now.


just found a note in a file saying that |U can only capitalize the first word in a string.
exists set_realm_capital effect
exists set_capital_county - meant for titles
exists set_primary_title_to

setting realm and capital counties through UI might not go through these. I also do not know how I would overwrite them.
Can't find on actions on them.
Will also raise issue on github and leave be for now.

TODO:
Debug
Localization:
    trigger and effect localization
    broken localization
    capital chain single and plural versions
    update de_facto game concept
Clean up code
Gui - Implement janky filtering gridbox? - put into issue on github
All - implement way to remove system upon single heir succession. - put into issue on github
Misc - Make AI - put inot issue on github.

Removing things moved to github issues:
Debug
Clean up code
Localization:
    trigger and effect localization
    broken localization
    capital chain single and plural versions
    update de_facto game concept
    other miscelaneous stuff I know I forgot or did not realize existed.


If one looses a duchy title due to title succession law, de-jure teritory beneath goes as well including capital.
Cannot core duchy even though counties beneath it are core. To debug this effectively I should document the triggers and effects.
ran into error wher is_title_core_due_to_capital caused an error to be raised because the character had no capital. Will have to look into.

documenting triggers:

trigger can have custom_descriptions.
custom_description = {
    text = localization or trigger_localization
    trigger- used in trigger as a whole and when false shows the text.
}

In trigger_localization key is trigger name, and the options are the person of the trigger.
Have $COMPARATOR$ and $NUM$ are available in localization text
CHARACTER, TITLE, PROVINCE seem to be available in localization text in gui language.
For comparator specializations it is unclear what specifies which one is used.
Triggers have implied AND at base level. Will change code to utilize this.
SHOULD BE ABLE TO CORE PRIMARY/CAPITAL CHAIN TITLES - BENEFIT MIGHT BE WANTED.
^would need ui clarification for when they are/are not cores from the mod.
^benefit is already applied. Only difference is that the flat cost is not.
^going to declare good enough as is.

Localization for triggers game says I am missing:
NOT_has_variable_trigger (BUG: has_variable missing perspective)
primary_title_equal
capital_county_equal
work on effects for modifier stuff (BUG remove_all_character_modifier_instances missing perspective)
is_de_jure_liege_or_above_target
NOT_TITLE_TIER_TRIGGER_THIRD
core_title_item
landed_title_this_equal
any_this_title_or_de_jure_above_all
NOT_TITLE_TIER_TRIGGER
is_head_of_faith
^ these are just for buttons
add space between icon and numbers in core title tab. Also make icon bigger. Fix core titles - it should be integer/integer. It is currently 0.00/
break up blob of text in core title encyclopedia entry
fix too much being bold problem in list encyclopedia entries.
fix icon for core title persistence
change icon for core county limit to core title icon. -same with core county
ck3 possibly does not like setting a variable to a scripted value.
will definetely want to make use of custom_descriptions for triggers.
will start with only global trigger localization. Can add more later.
Suspect that character does not have capital spam is being done at game start. Probably also occuring when titles are transfered, as characters losing titles might not have a capital. Also would be a problem if it was called with a baron or other ruler without a county.
now I need:
core_title_item
NOT_IS_DEJURE_LIEGE_OR_ABOVE_TARGET_TRIGGER
NOT_ANY_THIS_TITLE_OR_DE_JURE_ABOVE_ALL_TRIGGER
NOT_CAPITAL_COUNTY_EQUAL_TRIGGER
NOT_IS_DE_JURE_LIEGE_OR_ABOVE_TRIGGER
NOT_PRIMARY_TITLE_EQUAL_TRIGGER
NOT_IS_HEAD_OF_FAITH_TRIGGER
primary_title_equal and has_variable are missing perspective?

wrong context supplied before TITLE_DE_DESIGNATE_CORE_TOOLTIP_PRIMARY_TITLE error. Says unknown formatting tag 'NAK!'

now says I need:
NOT_HAS_VARIABLE_TRIGGER
title.GetName instead of actual name
NOT_IS_DE_JURE_LIEGE_OR_ABOVE_TARGET_TRIGGER
missing thing before or De Jure above:
landed_title_var_equal

removed #T sjfsjdlfjlejlkjdfs# from tooltips for (de)designate cores


Unknown formatting tag '"(v' on character window.
PRIMARY_TITLE_EQUAL_TRIGGER <- prolem here. Says wrong context was provided?
TARGET_TITLE does not seem to be working
is de-jure liege or above seems to be negated in child chain even though it is not.
checking any in a list seems to make the trigger extremely long. will have to look into how to fix it.
need NOT_LANDED_TITLE_VAR_EQUAL_TRIGGER
for some reason the localization at least is saying that a county title is not greater or equal to county
missing title name for is not realm capital and is not primary title.
Seems when looking for childrent it is looking for the title to be de-jure liege or above the title. <- Actually that looks to be part of will break core chain.<- don't know why that one is being triggered.
could designate duchy core after I had the empire. Something funky is going on. It looks like either it is looking for a higher tier title, or is checking going too high?
problem has been reversed - things which I should not be able to core nan now be cored.
County of pavia is showing up incharacter limit as a core title, but it does not have the modifier.<- fixed this bug (I think)
prestige modifier on province does not effect the character.
The check for if I can core the duchy of lombardy seems to be checked based on my _primary_title_!
beyond problems designating, the duchy in question should have been auto cored.

Looks like de-designating does too much with modifiers
Need any_this_title_or_de_jure_above
Need IS_CORE_TITLE_TRIGGER
It looks like core_title_item is only returning the first core title. <- checked and doing every_core_title_item is returning the right amount of things.
need localization for always?


save_temporary_scope_as = _title
holder = {# Changes scope to holder
    any_held_title = { # goes through core titles of owner.
        NOT = {this = scope:_title} # excludes this title from consideration (used for checking breaking chains or adding cores)
        target_is_de_jure_liege_or_above = scope:_title # de_jure_child of this title. Assume that this disqualifies the title I am calling this on.
        
        NOT = { # need to make sure condition is true for every, so looking for one thing which does not meet it.
            any_this_title_or_de_jure_above = {
                trigger_if = {
                    limit = {exists = holder}
                    # nothing in chain is owned by holder (which implies it exists) but is not core.
                    # will break if there is a title which is held by holder, but is not core between two titles.
                    holder = scope:_title.holder # held by owner. This shold also disqualify titles that don't exist.
                    tier < scope:_title.tier #in chain between two titles <- because title itself is presumably in heirarchy
                    #is_title_core = no # not core
                }
                trigger_else = {
                    always = no
                }
            }
        }
    }
}

If I ever use realm, I might want to use sub_realm instead.
Looks like what is happening is that the *tooltip* only displays the first entry in the list.


#is_a_child_title_chain_core = {EXCLUDED = this}
save_temporary_scope_as = _title
save_temporary_scope_as = _excluded
holder = {
	any_core_title_item = {
		trigger_if = {
			limit = {
				NOT = {this = scope:_excluded}
				target_is_de_jure_liege_or_above = scope:_title
			}
			NOT = {
				any_this_title_or_de_jure_above = {
					trigger_if = {
						limit = {exists = holder}
						holder = scope:_title.holder
						tier < scope:_title.tier
						is_title_core = no
					}
					trigger_else = {
						always = no
					}
				}
			}
		}
		trigger_else ={
			always = no
		}
	}
}

check if EXCLUDED is messing things up because the logic is working.

test_trigger = {
    any_held_title = {
        NOT = {this = $EXCLUDED$}
    }
}

test_trigger = {EXCLUDED = this}

Passing in `this` results in the `this` being used, NOT `this_object`
I am using the same names for temporary scopes everywhere. I have to be careful that I am not overriding it by accident.
core titles were removed as opposed to a new core being automatically created.
Prestige modifier and over core limit modifiers do not seem to be working, but otherwise it seems to be mostly functional.
Possible overriding/colliding scope _title names in will_core_loss_break_chain. Changing scope name.
auto creating core working properly
was not calculating correctly for will core loss break chain. K, d, c core -> can decore d. Triggering recalculating cores correctly removes k. Need to figure out why.
will core loss break chain currently allows for core breakage at the level of the primary title.
I might run into problems if I try to do things to a title with no de-jure parents/children like a head of faith title or a titular title.
Problem is in logic of is_a_child_title_chain_core. Need to exclude the title in two places.

extremely non-rigorus testing of ability to core/decore and which titles are eligible is done for now. Next I will try to get all (or as many as I can) of the modifiers to work.
Based off how I am doing things, the core limit will not dynamically update when the character window is open.
Number of cores and core limit numbers are all showing up as 0.0
Managed to get rid of the errors, but everything is still 0.0
Will look in non-debug mode for finishing touches on tooltips.
Designated Core Title is showing singular even though it is supposed to be plural.
^Same with Core Title text in realm tab.
Will be taking over traits expanded.
************I don't see a way into the expanded traits tab, and it does not appear to display any new information. I will commandeer it. I need to make sure to mention it.
Possibly is shown when there are too many modifiers?
The problem is that there is actually a problem with calculating the core limit and core count etc.
It looks like values are referenced by scope.value_name. <- I guess it is like this because they are scopes.


Testing in object explorer seems to indicate for values I have to use every_list_name = {add = 1} as opposed to every_in_list.
What I am looking into right now does not explain core limit. Will have to look into that next.<- it actually does.
Still wondering/want to know if something is wrong with core list. Possibly load order, will try adding numbers before files - think that effects load order.
hypothesis for problem is that the *files* refer to each other, even though the individual *functions* don't. Splitting the files and effecting the load order would fix this.
in testing load order for decisions - 99_ overruled 00_, 01_, and cti_
will try splitting trigger file.

every_list_name causes an error saying it is an unexpected token.
It looks like it is just funkiness with scripted lists. It looks like they are not fully working.
It looks like it is possible to add and remove from a list. This might be preferable to recalculating it every time. Look towards possibility in the future. <- raise on github
^ this looks like it is needed to get around scripted lists not working.
clear and initialize lists when recalculating, add and remove in applying cost function (outside of if it has a cost). Possibly also rename function to reflect that.
One problem with this approach is that the core list in the scripting language can be out of sync with the one on the character window due to not being recalculated after the primary title changed or capital moved.
^Will leave the problem be for now. Seems relatively minor and hard to approach without the on_actions for them.

How to deal with the lists.
add to\create it: - assume create it.
add_to_variable_list = { name = variable_name target = scope }
remove from it:
remove_list_variable = { name = variable_name target = scope }
clear_variable_list = variable_name

what do these do?
variable_list_size, local_variable_list_size and global_variable_list_size

found these in jomini manuscript:
add_to_variable_list = { name = variable_name target = scope }
remove_list_variable = { name = variable_name target = scope }
clear_variable_list = variable_name
any/every/random/ordered_in_list = {
    variable = variable_name
}
is_target_in_variable_list = { name = variable_name target = scope }
variable_list_size = { name = variable_name target = value } <- how does this work?
has_variable_list = variable_name

at some point I have to question the utility of the variable core count.

note that held titles also gives the county capital barony title associated with the owned counties.
appears to work as expected, however I cannot figure out what variable_list_size does.


tasks:
add/remove core to list
add/subtract from core count
apply cost

in gui core_count is working, but core_limit and the count of core_titles is not.
It looks like "this" behaves attrociously. It seems to be maintained as a pointer to this scope, meaning that a value from it is not actually a value, and anything derived from it cannot be passed or moved between scopes.
^ I have determined that I should avoid "this." like the plague
need to add localization for over core limit alert. Possibly also change icon.
core limit is working. Display of number of core titles and display of core limit still is not. Will work on.

.Custom, .Custom2, .Custom2_Title <- might want to investigate what these calls in the gui language do.
Most likely being a bit overly zealous about calculating the variable.

exists trigger has_order_of_succession
has_revokable_lease <- might have to look in to leases.
Should switch to using has_title, has_primary_title, highest_held_title_tier,
apparently special titles exist in the game. Looks like they are related to factions.
exists holds_landed_title
CK3 is throwing a lot of "Property cannot be a data property for animation." but it is still working as I intended. I will ignore the errors for now. They might even survive to the end because it is working.

Testing title succession:
title sucession laws overrule always_follows_primary_heir (counties under title law duchy core or not went to title succession inheritor of the duchy).
Designating a title law title core does not cause it to stay with the character.
Based on this information I might want to disallow anything with a title law above it from being designated. But what if primary title is the one with the law?
On inheritance if you don't inherit the title above, you don't inherit the one below (not inheriting duchy means you also don't get provinces).
Heir which did not get primary title but did get primary duchy got core titles. But the player heir was a different one who got a random duchy.<- reason is that the other duchy was created first. Need to be careful about that.

If primary title not inherited, and inherited by a landless character, they will take de-jure capital.
when primary title lost by title law, dynasty successor to take capital gets core titles. If your hier is not them then you will not recieve the titles. <- only seems to apply when you lose your primary title
^assume similar things will only happen for the next highest tier title below the primary.
Only exception to losing all titles under title inheritance title is primary title.

1. To deal with incorrect primary heir due to duchy order, add button to "remake" duchy <- problem in vanilla. Should be ability to designate primary duchy as well.
^ same problem exists with counties as well, and they cannot be re-made. Will have to look into solution.
^ would probably work just the same with removing and then adding the title back.
^ should only work on capital chain. Can't think of reason to do it otherwise. possible to autodo or check on title creation or stuff. <- will give advice on ways to deal with (creating and destroying titles, grant and revoke, core first relevant titles in list)
2. Disallow all titles which are dejure under title law titles which are not primary title from being core
^ possibly change to title law titles your primary/player heir is not set to inherit. <- if same as realm folded in, otherwise need to test if cores matter.

1 - exists get_title, change_title_holder <- does not look to be a good or clean way. Best way I can think of would be usurping your own title (if that even works).

2.
a. create has_any_title_law based on previous musings.
b. add check to is eligible for core
c. add check to is core consistent

*************Should recalculate cores on death! (right before death fires)

exist set_realm_capital and set_primary_title_to
gui language has function: GetActiveLawInGroupWithFlag( 'flag_name' ). This is what I want, but I don't think I can use it.
I like the scripted list architecture better - more done when queried means that it is more responsive. Sadly it was not working.
Thinking about it I will go back to it, I will just move away from the scripted list.
I will try to store as little as possible on the character.

I will only calculate the numbers for display or calculations.

The problem is applying the modifiers. Other than capital or primary title moving it should work well. 
head of faith has it's own title succession laws.

Titles only appear to have the laws that are associated with them on them. For instance different gender law titles do not appear to have any succession order law.
different gender law leads to being ignored and treated entirely seperately for succession, like elective ones are.
partition vs single heir is irrelevant as far as titles are concerned. Elective ones and ones with different gender laws are treated entirely differently.

Only have to check for elective and gender laws.
Edge case: Lose primary in title succession to unlanded who takes capital. Who gets core titles?
It is possible for the primary title to not be core due to title succession laws.
Same for the capital.


Not core if owned title above other than primary title has title succession laws.
primary not core if it has succession laws, but that does not effect the rest?
when elective and title goes out of dynasty, keep all-ish domain
when elective and in dynasty, heir gets inserted at top of succession order and is considered your primary heir.
can make counties core if primary title has title laws BUT has no peers.

adding a title law could also lead to things not breaking. Need to look for an on-action for that.

TODO:
Debug
Localization
Add singular to capital chain gui
account for primary title possibly not being core in gui <- Can I do this in the gui language?
look into adding or changing title/realm laws on action as it could break things <- can't find on action for this. adding to similar existing issue on github
Move away from storing information on variables on the character. Move to only using variables for display/presenting information.
Add recalculate cores to death on actions to recalculate cores right before inheritance. (might lead to frustration sometimes, but it will probably lead to less frustration overall)
possibly add check for unlanded character taking primary title (or possibly also not primary title) and stealing core due to it being de-jure capital of what they took.
work on prestige penalty from core provinces.
probably want to auto-core up from title.
look into preventing fame gain on refunds. <- add_prestige_no_experience


Removing core_count variable and core_title_list variable. Wish I could use a scripted list, but will have to make do with filtering held titles. When I release mod I will raise the question on the forums.
Path:
scripted_values
scripted_triggers
scripted_effects
scripted_guis
check others

TODO:
Debug
Localization
x Add singular to capital chain gui
x account for capital not being core.
x Add singular to core title tab header gui
x account for primary title possibly not being core in gui <- Can I do this in the gui language?
possibly add check for unlanded character taking primary title (or possibly also not primary title) and stealing core due to it being de-jure capital of what they took. <- raising as issue on github
work on prestige penalty from core provinces.
probably want to auto-core up from title.

primary title not core -> And(Title.HasLaws, Title.GetHeir.HasDynasty(Title.GetHolder.GetDynasty)) <- still works when title laws get folded into realm laws.
Thinking about it realm laws are a bit misleading, really it is character laws.

TODO:
Debug
Localization
work on prestige penalty from core provinces.
probably want to auto-core up from title.
add warning for not inheriting cores due to bug?

HasDynasty is essentially a check of not being lowborn, NOT a check if you have a specific dynasty.

It looks like there is something wrong with the logic for showing the primary title in expanded core titles tab. - it is not being shown when it should be
logic is also messing up for a duchy under the primary title - can't designate it as core.

Patch 1.1.3 came out. Looking at differences:
Looks like on_title_loss was removed.
^ appears to still be there.

title could possibly not have a gender law associated with it.
want: need yes from title law.
if title has law, good if realm also, if title has no law good.
fixed bugs ^

change icon for over core limit modifier.
possible ways to deal with not being able to apply character modifiers from a county:
1. apply and take away modifier when applying/removing county modifiers
^ problem is that modifiers are sometimes removed from titles which don't already have it.
2. scrap it
Will do option 1 -will have to look into localization options.


possibly move cost/refund for designating/de-designating titles to button. <- I think the difference to doing it this way is it would disallow going into negative prestige.
^ I should do this.
I should also look into moving the variable assignments out of the animations - it is annoying to have all the errors.
It looks like modifiers CAN have a scale - an example is the prestige from council positions.

I will leave the over core limit modifier as is because it is already implemented, but I will use it for overtime core title cost.
False alarm, scale is only for councilor stuff.
Will have to carefully take care of adding and taking away (if possible. Might only be able to add defined modifiers.)

looks like I can pass strings and reference things with them. Can I do that with values as well?
It appears to only be strings.
Either way it looks like only pre-defined modifiers can be added.
Could try to do the same thing as for over core limit, but don't plan to have a cap.
Could try to make a dummy building.

Could try making a dummy council position?
Could add it onto a council position. <- problem of unclear source.
I think I have to go the route of the over council limit.
Will scrap for now because I don't like the idea of caping it.<- adding issue on github.

TODO:
Debug
Localization
x probably want to auto-core up from title. <- will make sure to communicate, but will not do for 1.0
document bugs somewhere
x move cost/refund for designating/de-designating titles to button <- instead will add condition to is valid.
Look into moving the variable assignments out of the animations - it is annoying to have all the errors.

moving variable assigments out of animations - will play farther into the bug with adding title laws, changing capital or primary title not updating things.
Will add variable setting to initialize_cores and core_change_effect

The only one which has to move is number of cores. The rest can stay.
^ actually, all should be set. They could be changed while viewing the window.
_core_limit could still be a problem. When it is update there is no call that would update the variables.
^ will have to test if variables reference a static value or a calculation.
CUSTOM IS A CALL TO CUSTOM LOCALIZATION!!!!!!!!!! I CAN USE THIS FOR THE VALUES!!!!!!

TODO (before 1.0.0): <- remarkably short and not too open ended.
Debug
- saying domain_limit is none in cti_values line 4 <- due to being called in the scope of a title to set a variable.
- most likely related to above, can still designate titles core if not enough prestige.
- need to allow coring if character does not have enough prestige as long as the title does not cost prestige to core.
Localization
- utilize custom localization to move as much as possible away from variables and from worrying about when they are set
- above should get rid of setting variables in animation blocks.
- update encyclopedia and game concepts to reflect current state of mod. Additionally other informative tooltips.
- fill in missing localization (alert, effects, modifiers, some triggers)
Documentation:
- figure out how to present mod to users
- figure out how to communicate open bugs/finnicky things about mod
- replace readme with actual readme and move this long one out of repository
- hopefully at some point in the future process information here into modding guide/help thing.
Communication:
- figure out how I want to ask open questions or request additional tools for modders.

Belated to say this but in localization |x where x is a number means show that many decimal places
exists save_temporary_scope_value_as
customizable_localization does not function as I wanted or thought it did.
I am starting to suspect more and more that passing things with $$ just passes the text and puts the text where the $$ is. It does not pass the object or a snapshot of the object.
Will look into going back to variables, but still using custom localization
Cannot set scopes or variables in custom localization. Useless for my purposes.
variables will be:
_num_core_counties
_core_limit<- will only update on opening tab
_num_over_core_limit<- will update both on opening tab and core management.
_num_core_titles

Header can be misleading. Should change it to core counties or core limit or just remove it or make it bigger and separated.
Should have number turn red even when not in opened tab. - clearer you are over core limit click here. <- will not do. Too intrusive, out of place, and will also occur for other characters.
numbers update properly when character screen is open.
hide modifier for being over core limit.

make core limit box/icon bigger
Add core limit to tooltip even when not over
move core titles heading into the scrollbox or remove it.
Generally looks bad due to being centered with lots of empty space on either side.
Core titles number can not update for some characters.

could be problems with switching characters but not re-opening tab.
#R # in localization does in fact make the text big.
Overcorrected on the size of the icon. Need to also resize the text.
Should move text below

remove bullet from core limit tooltip
move core limit up and make box bigger
look into Jomini for way to have the hover be the tooltip.
Looks like I can't get the tooltip I want.
Need to move the gap from being between the crown and the text to being between the text lines.
^problem is that the gap is in the bottom of the image. Need to overlap the boxes or crop the image.

Wonder if bug with not inheriting core titles would apply to head of faith titles.

missing localizations:
action_over_core_holding_limit <- also need to change name
action_over_core_holding_limit_desc
action_over_core_holding_limit_click
hide over core limit modifiers
core_county_benefit_modifier
custom localization for de-designate core
custom localization for designate core
add_prestige_no_experience
recalculate_cores_interaction
update all tooltips for current mod mechanics.

removing -debug_mode -develop because I think they are showing extra text. I don't want to see that right now.

De-designate Core:
tooltip for capital gives blurb about why I can't, but also has NOT_has_variable_trigger on it.
Same with primary title.
Can still go into prestige debt from coring. Need to fix that.
backspace seems to work, but needs to be moved outside of formatting.
should color prestige gain multiplier. Possibly just show the modifier I am recieving.
duchy with no chain show All of these: as reason it does not work.
toast for de-coring did not pop
cannot designate due to title law: currently, 3 fulfill this requirement.
All of these:
change core persisntence none name.

Only a county can break a chain - other tiers simply have their tier get bypassed.
need to recalculate cores on game start (loading from a save game) or switching played characters.
CK3 does not like the backspace character

What is left:
One bug to handle (toast not appearing)
Code cleanup
Documentation for users (mod page/post etc)

Want to allow coring of titles under title law titles that you are set to inherit.
Bug which leads to losing core titles under certain circumstances when you have a different primary_heir seems to bug out the primary/player heirs. Capital owner is considered primary heir even though they are not, and player heir is based on title order.
title law leads to no toast for de-coring titles because the titles under the title law are no longer core. Is core should allow inneligible titles under title law *if* they are from the mod.
^This will lead to a proper toast on cleanup, but it will also lead to cores being out of sync.
adding on action for playable on quarterly tick to make sure cores are correctly calculated.
will need to communicate unused variables and the explaination that they are for display purposes.
always_follows_primary_heir is actually a misnomer. The titles will not travel outside of the dynasty.

Code cleanup time.
Code cleanup done. Will clean up this readme right before release. It is useful to be able to dump thoughts here.
bug with core titles not going to heir does not apply to the head of faith.
Title inheritance laws work properly with designation but not with consistent.
time to make the game concepts entries look better
Need to check that head of faith title is still considered core.

There is a stacking = yes option on modifiers!!!!!!!!!!


I think I want to change it so that only counties (or titles with no de-jure counties beneath them) can be cored.
Titles de-jure above would have to be auto cored to make inheritance work right.
I am also considering allowing any title to be cored, and possibly add the penalty for the number of leaves in a core tree.
^ I like the sound of that.

Reasons for switching to new architecture:
- Under current architecture core titles could be lost on inheritance
- There are senarios where someone might want to hold onto a duchy for sentimental reasons even if they hold no counties in it.
- To some degree the previous archetecture forced (or at least encouraged) this.

New Architecture:
- Any title can be cored.
- When a title is cored any title de-jure above it is also cored.
- The previous point creates a "core title tree"
- Costs are only applied for the leaves of the tree
- Moving a leaf down a tier does not cost anything.
- Primary title, realm capital, and special titles (like head of faith) are exempt from the penalty.
- Only core counties get the control benefit.
- Same inneligibility rules for title succession laws. Additionally titles with different title succession laws or parents with different succession laws cannot themselves be cored unless they have the same succession as the realm (Exception is with primary title with no peers).
- Display on character page will split mod core titles into leaves and branches.
- Baronies are still excluded (counties are the minimal inheritable unit)

Need to test:
inherit title with title succession law, but lose parent title due to partition. Do I still get the title and its children? <- still get title and children.
^ perhaps guaranteed to get children?
^ looks like when they are not getting your primary title they are guaranteed to get children titles.

Steps:
- xChange definition of core title. <- this can actually stay the same.
- xFix implementation of title law ineligibility (to reflect tests above)
- xChange definition of able to be cored
- xChange definition of counting to core limit
- ~Add game concept of core title tree, leaves and branches
- xAdd trigger for has penalty/cost
- xCheck definition of inconsistent titles
- xAdd in penalty modifier.
- xChange effect of coring a title (auto core parents)
- xChange recalculation of cores and the like
- xOn de-core consider how to deal with it
    - Add dialogue for how far up should be decored. Only show if applicable.
    - Add option or game rule to disable dialogue.
- Change display on character window

!!!!!!Need to check what happens if multiple titles of primary tier are owned, all of which are going out of the dynasty via title succession laws.
- Lose all titles under titles lost under title succession laws unless _only_ title of the tier is primary title

is_core_leaf essentially translates to is no child a core.
Question of behavior - if an inconsistent core is found should it be de-cored or should de-jure above be cored.
^ all cores are actually consistent. The question is if the parents are. Should definitely core parent titles and give the player a toast.
^ cores ineligible due to title law are actually inconsistent.
NOTE: Don't have to core up from capital (all the way to primary tier). Get all titles up to but not including primary tier no matter what. <- should communicate this to users clearly.
exceptions to all held parents should be core - any are above capital. This exempts the highest tier in the chain (but only if a lower tier one is hit.)
trigger should be is parent core. Will check held titles for if they should be core to core them.

Should more accurately refer to it as de-jure core trees. There can be multiple disjoint trees due to the primary title, capital chain and special titles.
When coring should always core all above i.e. designating core automatically cores all above if they are not already core.
When de-coring will get option i.e. de-designating core only does the title, need separate effect for de-coring above.

every_list_name = {limit = {} effects} works. Should change to using this at some point.
ordered goes in decreasing order.
need to re-jigger how the core change effect works and when it is applied.
Decided to count titular titles to core limit and giving them a cost. This deserves a deeper look at a later time. <- opened github issue.
I believe that core titles will only effect the core limit or have a cost if they count to the core limit (are a leaf). <- question is about when designating, so non-cit-cores are irrelevant
^The oposite is not true.
core cost modifier must be entirely reset on each change because whether something has a cost does not depend on the title alone but the core title trees.
Would like to optimize so that cores which are auto cored above do not trigger the recalculation.
Possibly consider changing over core limit modifier to be stacking <- no b/c it should not be called for all titles which count to the core limit.

reconsidering that core modifiers needs to be recalculated every time. Tooltip will be better if it is applied/taken away carefully.
applied: always unless it is a descendant of a leaf that is due to cti (in other words a core which has a cost).
when is the modifier removed/when is a refund applicable? <- depends on if auto de-core up or not.
- parent has other core descendant
- no parent
if auto de-core up then always yes.

Need to figure out how I will implement the auto de-core. Save as global scope or save as global variable? Will do scope, but will look into if a global toggle or flag exists.
^ toggles exist in the gui language. Should only be called from gui, and doing it in the gui language means that it will be specific to each player.
^ will have to look into how to implement this. <- need to have the button press from de-designating trigger the event or dialogue if the variable has not been set.
Actully need two variables - one which is the decision if made, and the other which is if the decision has been made.
Or could do only one variable and depend on existence.
Want:
de-designate core press
exists decision -> de-designate with decision passed to function
does not exist decision -> open dialogue with 4 options
    de-designate up -> de-designate up
    de-designate only -> de-designate only
    de-designate up and remember -> set and de-designate up
    de-designate only and remember -> set and de-designate only

Possibilities:
press -> event if not set, does thing with passed if set -> does thing and possibly sets.
gui      script            script                           script           gui

press -> dialogue -> do thing and possibly set.
gui      gui         script       gui

Unsure how to get the bottom one to work. Don't see an easy way to add a new window. Also an event seems more appropriate.

possible way of doing it:
press in title window -> scripted gui (passed existance and value) -> opens interaction window -> do things there -> go back to scripted gui (possibly new one)
can I define an interaction window? 
interactions have a localization_values field. Would be useful elsewhere as well.
looks like interactions can have options.
Will design it around using an interaction with options. Will have to work out tooltip <- will work if skipping interaction is done via a shortcircuit.
Doesn't solve problem - still need to do something in the gui language from scripting language.
Advantage to interaction options is that I can make do with 3 - up, only, remember <- need to make sure up and only are not both selected.
looks like localization cannot execute things.
could have it player specific if it is a variable on a character. It would be lost on succession though.
At this point I think I have to create my own window and open it when appropriate. Other option is showing something in the title window, but that would most likely break the window and would not be clear/obvious.

Found method. Based on Advanced Cheat Menu mod
https://forum.paradoxplaza.com/forum/threads/mod-advanced-cheat-menu-gui-based-cheat-menu.1417707/
https://steamcommunity.com/sharedfiles/filedetails/?id=2218867072
Make sure to give credit.

possibly want to change to doing console commands for effects.
^ problem is not sure about passing objects.
^ also prefer scripted guis because they seem to be more "supported" <- they seem to be used as intended in this case as opposed to not used as intended.
checking if the console command method works in ironman. <- it does work.

Problem with console command method: it can open multiple copies of the window. need to add a is_valid check to prevent this.
other problem with console command method: Window can persist beyond where it is supposed to (for example to main menu screen if it is not closed.)
All things considered I am not going to use the console command method.

Options:
1. create a window as a child of the hud. Then find a way to open or show it when appropriate. Also make sure it has the right title.
2. event to variable on character to applied in script system on next check. <- need buttonpress or similar for this to work.
3. Event with widget, buttons in widget
4. Event with widget, remember buttons in widget, other buttons not in it.

Like option 4.
Either way want way to bring event/dialog up again.
Could be via decision, but I do not want to clutter up decisions.
If this does not work out and I need a default, I should use only as the default.
Maybe only allow only. Otherwise operation of moving the core up will necessarily have cost.
Don't want to deal with all this, will have only be the only option give. Need to be clear on what is happening.

can I make a trigger like 
owned_de_jure_parent = {
    big structure with $TRIGGER$ checked
}? Worth looking into in the future.

Looking into icon for core_leaf concept.
Ideas so far:
custom_faith_6 waaqism flat dynasty core_tenet_nudism core_tenet_marriage core_tenet_holy_tree restore_inheritance_interaction forgive_interaction icon_building_royal_forest

figuring out how to determine when something has vs does not have a cost.
Things to keep in mind - will probably happen after designating/de-designating core.
will have cost if no ancestor has a cost.
will give a refund if parent will not become leaf.

Want these to work whether before or after coring is done. ancestor has cost excluding this title. parent is leaf excluding this title.
Wish I could pass note for excluded. <-missing keyword arguments.
Could make more precise conditions for when a core will change the core limit.
Will out of order de-coring work properly with respect to costs? - No need to de-core from bottom up.

can possibly simplify is_title_core to:
OR = {
    AND = {
        has_variable = core
        tier >= tier_county
        var:core = yes
    }
    is_core_due_to_not_cti = yes
}
Will do this. Will record current implementation here.
is_title_core = { # Assume that this will only be called if the title is owned
    trigger_if = {
        limit = {has_variable = core}
        tier >= tier_county
        OR = {
            var:core = yes
            is_core_due_to_not_cti = yes
        }
    }
    trigger_else = {
        is_core_due_to_not_cti = yes
    }
}

when to auto core?
when inserting will break chain. This will only occur if a child is core.
answer is if a descendant is core.

TODO:
Debug
Code cleanup (some triggers/effects might be left over from last architecture)
Documentation for users (mod page/post etc)
xChange display on character window.
xUpdate function calls from entrypoints.
Localization work (game concepts and others)
xGame rule name changes (did not do localization)
Look into whether head of faith should be a special title.

Could I display a tree? - will look at dynasty tree.
Looks like I can't (at least not easily).

Categories:
currently have:
primary title, capital chain, special, cti
Plan for new Architecture:
Need to convey which are leaves and which are branch
want to convey reason for core
Can I change border/highlight colors? That would allow me to convey reason while only splitting into leaves and branch
It looks like I can change the border color, but it will require some re-jiggering.
To do it I will add a block which I can overide for the frame. I will have to make some recolored frames.
Colors need to signify: Primary, Capital Chain, Special, Mod
Primary: Purple
Capital Chain: Blue
Special: Orange
Mod: Normal title frame
Color_Bright_Yellow is used for highlight on hover.
Will use colors defined in colors.gui - should be curated for the game. - will only use as inspiration, don't think I will be able to actually use the exact colors. - Didn't end up using them at all.
Could I use a mask or something for it? - Do not know how to do it.
How to communicate what the highlights mean? - should modify (add to) the tooltip if possible. <-  looks like it might be possible, but most likely not without a lot of work with the possibility of changing a lot of things.
I don't like it, but I will have to communicate it in the encyclopedia and mod pages. It irks me that the information will not be available at a glance. On the plus side, once learned they should hopefully be easy to remember.
2 lists. leaves and branches. Both are colored based on class.
Will move primary check to gui language only. Others will force exclusivity.
I believe I am done with the new character window display for now.

Terminology: Core title forest (there can be multiple trees). Will have to change terminology to this.

Focus will be on making things work - this also means just fixing localization to work not be finalized.
CK3 complaining about Title in ObjectsEqual. Changing to scripted gui.

Everything appeared to be working except for the core leaf penalty. Also some script errors came up. <- core leaf penalty not appearing because the game rules are flat cost.
Strange error Failed context switch for holder = {has_title = scope:_title}. Replacing with object equality check for now.

Might have target_xxx or scope:target for triggers. Don't know.

core leaf cost was not applied for a county. De-jure above was a non-core duchy and primary title kingdom
same bug with duchy below primary title.
need to rename scripted values.
Problem was that the title was seeing itself as an ancestor that had a cost.

Everything seems to be working except for `Data error in loc key 'PRIMARY_TITLE_EQUAL_TRIGGER'` <- will have to add custom desctiption to trigger or do something else to fix this.
Next a bit more debugging, investigating head of faith titles, localization and code cleanup. After that is done look into documentation/presenting everything.

need primary_title_equal or look into de-designate core trigger localization.
need to correct localization of title law to reflect current implementation.
even during recalculation of cores, only one title is de-cored at a time when they are all ineligible due to a title laws.
Looks like ordered in list only does the operation once by default. Will have to change to do all applicable.
Looks like ordered_list_name also has a position variable which can be used to chose a particular one (also can be used in a while loop)
Based on looking in code to make sure the iteration goes through all of them just set a quite high max.
^ fixed problem.
Need to reduce text or add image/portrait to cores removed toast.
Need to make sure head of faith titles are considered at least special cores. Or at least change localization to reflect them not.
Went through localization.
Everything seems to be working. Need to take closer look and see if things look good.

TODO:
Debug
Code cleanup
Documentation for users (mod page/post etc)
xCheck to see if localization for over core limit alert is indeed duplicated and keep favorite version <- they are in fact duplicated. Assume duplicated version came from seeing an error and not seeing differently named localization.
xLook into whether head of faith should be a special title. <- it has its own title law. Will make it special and make special overrule title law exclusion. Main reason is I want to see the special title border.

Documentation items:
New readme
    - Should be minimal
    - Should include changelog
    - Should include instructions for reporting bug/problem
    - will be markdown
    - Should probably have links. <- problem: Need the readme done before links are created. <- will add links in first version >1.0.0, but not 1.0.0.
paradox mod page
    - looks like it has its own change log stuff.
steam mod page
ck3 user mod forum post
modding guide? (It would require condensing ~2000 lines ^ of brain dump) <- will do at some point, but not for release.
Open question forum post? <- After release. Should definitely do.

Common action items:
- Decide whether I am sharing github link/making repository public. - I think I will but only on the forum post. It will probably have the least people going to it and the people on it will be more likely to get use out of the repository. <- will not share repository at least initially. Will wait and see.
- Decide on thumbnail(s) for mod <- think I will use commander_is_leader <- will make sure to say where the image is from.
- Write description
    - Present purpose/usecase for mod
    - Give overview of added mechanic
    - Present some more details on how it works
    - Mention in game encyclopedia
    - Game versions
    - Not ironman
    - Mention compatability guesses
    - Present known bugs
    - Present future direction
- Make screenshots to illustrate mod/differences from vanilla
Forum:
- Additionally mention scripting challenges I ran into
- Make sure to mention ui challenge of fitting it in with excelent fine tuned existing ui.
- Get permission for links to other pages? <- looks like the three links in question should be ok. Relevant, not trying to sell something or linking to a forum Paradox does not have some control over.

Post Strucure:
Forum name: [Mod] Core Title Inheritance
Picture
Links
Description with sections listed above.
---Forum post divider
Change log in second post under spoilers
---Forum post divider
screenshots (will be at top with thumbnail for steam)
--forum post divider
reserved
----Forum post divider
reserved


Looking for readme for things I might have missed:
- checking for de-jure titles above empire tier. Does this cause problems (I don't think so, but have not explicitly checked)
- grace period for over core limit? <- no in general. Possibly yes when core persistence is true.
- Posibly expand use of commander_is_leader
- Need to mention commandeering expanded traits toggle
Main picture will be commander_is_leader

For forum known bugs:
- In error.log it will complain that several variables are set but never used. This is because they are not used in the scripting language but are used by the gui to present numbers to the player.
- The error.log will complain that some characters do not have a capital_county. This does not effect the function of the mod.

For forum addition to compatability:
- This mod commandeers the CharacterWindow.ToggleExpandedTraits toggle and the CharacterWindow.AreTraitsExpanded check. The toggle appeared to not be called anywhere, so I decided to use it.

For forum open scripting challenges:
- I could not find a way to directly check if the property always_follows_primary_heir is set or its value. This property forms the basis of this mod, and the setter is exposed, but I could not find a getter.
- I tried to create a scripted list like is shown in the common/scripted_lists/00_scripted_lists.txt for core titles, but it did not work. The every effect was not recognized in scripts, and in my testing the every effect was also not recognized for any of the scripted lists in that file either.
- Gridboxes in the datatype language allocate a grid rectangle to every object in the list at the beginning, and will show holes if items are not visible.
- There do not appear to be on_actions for moving the primary title or changing the realm capital.
- They did such a good job on the UI that it is hard to add more to it without compromising how good it looks or how intuitively it functions.

Description:
This mod adds in a system to allow characters to retain more titles on succession under the partition succession laws. It achieves this goal by allowing them to designate titles as "core" which will cause them to be inherited by the character's heir. The user can optionally set a core title limit, add a cost to coring or holding core titles, or give core title counties a slight benefit.

How to use the mod:
- Owned titles of county tier or higher will have a designate core or de-designate core button on the title window.
- Core titles can be seen in the character window for any character with cores (this should be any character with a title). To see them click on where it says Core Titles in the middle of the window next to the titles, claims, and diplomacy. This will expand the core titles tab which will display the character's core titles split into the core leaves (core titles with no cores de-jure under them) and the core branches (all other core titles). The titles will have an outline according to the reason for them being core. If the reason is due to the player designating them they will not have a colored outline. The primary title will have a purple outline. The capital and titles de-jure above it (below the tier of the primary title) will have a blue outline. Special titles (currently only head of faith titles) will have an orange outline.
- The in-game encyclopedia has descriptions of the mechanics and concepts introduced.
- There is a decision to de-designate all designated cores
- There is a character interaction to recalculate core titles. It should not have to be used except in some edge cases as described in the current bugs section.

Some details of how the mod works:
- A character's core titles are the (mostly) complete set of titles which their heir is guaranteed to inherit upon their death. Some titles will be core for every character just based on the base game mechanics (with a few exceptions due to title succession laws). These titles are a character's primary title, their realm capital and the titles de-jure above it up to one tier below their highest, and head of faith titles.
- All other core titles will have been designated as core by the character. Designating a title core also designates all of the titles de-jure above it core up to an existing core title or the highest owned tier of title. This is required to guarantee inheritance based on how the game distributes titles for succession.
- The only core titles which will count to the core limit or have a cost are the core leaves (the titles with no de-jure descendant core titles) which were designated as core by the character (as opposed to being core due to mechanics in the base game).
- One cannot designate titles de-jure under at title with title succession laws as core (with limited exceptions)

The image for the thumbnail is commander_is_leader.dds. It is located in the game in the folder gfx/interface/icons/

The mod words for game version 1.1.3, but should also work for 1.1.2. I have not tested it specifically for earlier versions.

The mod is *not* ironman compatible.
The mod should be safe to add to an existing game, but it might take up to a quarter for it to be fully active.

Known bugs:
- Core titles are not recalculated when the primary title is changed or the realm capital is moved.
- The first overtime core leaf cost can take a day to apply.
- There are two known cases where it is possible to lose core titles:
    1. If a character's primary title has title specific succession with an heir that is not of your dynasty and is unlanded. On inheriting the title they will take the de-jure capital of the title, possibly taking despite it being a core title of that or a different character.
    2. If a character's primary title has title specific succession with an heir that is not of your dynasty. Any core titles designated by the character will go to the heir who inherits their capital, which can be different from their player heir who will be the one to inherit the first title in the title list of the highest remaining tier after the primary title is gone. In the case of partition succession with your children inheriting, your oldest child will be the one to receive the capital, but you will not play as them after dying.

Possible future features:
- AI designation of core titles. Currently, the AI will never designate titles core.
- Changing the display of core titles in the character window to be a two wide grid like is seen when expanding titles.
- Adding a way to remove core titles from a character/from a game (unsure which or if it will be both) after single heir succession laws have been passed.

Mod compatibility guesses:
- This mod modifies the title window and character window guis. It will most likely be incompatible with other mods which also modify them, though in the case of the character window its only purpose is to present information to the player, and without it the mod should still be functional, just difficult to tell what is going on.
- This mod adds calls to additional on_actions or in one case an additional effect to on_actions from the base game. This also has the potential to have/cause conflicts.



Creating new location for development repository. Old one will just have essential files.

Paradox Mods short description:
Adds in a system to allow characters to retain more titles on succession under partition. It enables them to designate titles as "core" which will cause them to be inherited by the character's heir.


Possibly use an interface similar to granting titles to designate core titles.
Possibly expand to making a will - grant specific titles (or quantities of gold to characters)
- Would work by giving titles on death but before succession.
- Would work by having benefactor as variable on title
- Would not play nicely with my_realm succession tab
- Might break who is liege of whom upon inheritance
- Strong chance of breaking who primary heir is - need to add ability to designate an heir.

Seems like there might be interest in granting all titles manually on succession. This should be possible, one just needs to trigger an event or open a window or something on player death, and have the player manually grant titles without restrictions.

How would the AI designate titles? <- either fill out capital duchy and then move to next duchy or core titles with most income/levies or combination.
^ For overtime will make them always go up to the cap (possibly change for tribal) (possibly add exception if it would put them at negative prestige gain).
^ How to deal with cost when cores have a cost? <- AI probably has way to decide when to spend gold, should mirror that except for prestige.
When would AI re-evaluate core titles?
- Some set time period (quarter to 5 years)
- When they aquire a title
- Problem again of when capital or primary title changes. <- This needs to be dealt with by time period. Possible solution is cache these titles and check if they changed each quarter. This would be more performance friendly than re-evaluating each quarter. Could probably do the same thing for recalculating cores.
- For flat cost how does the AI decide when it is worth it to de-core and re-core? For now will do stupid behavior - Will only do it if they have enough prestige, but will always try.

Tying capital duchies/counties to higher tier titles.
- Problem of pre-mature game over.
- Main use case would be elective succession - get duchy along with empire.
- Mechanically this will already happen (more or less) if another equivalent tier title is owned.
- I believe you can always revoke the capital of your primary title.
- Unlanded characters get the capital county.
- I don't see an easy way to do it beyond forcibly granting the titles on death
- Possibly could look into adding custom elective succession on lower titles in direct line


- One possible approach is to grant the titles on the current holder's death (this is different from inheritance). This would not be reflected in the succession window, but I don't think it would be that hard to implement.
    - The other approach I can think of is that it might be possible to give the lower titles a custom elective succession law which is tied to the higher title. This approach would be reflected in the succession window, but I am not sure how much work it would take, or even if it is possible.

    - Bypassing the succession system for players and granting the titles on the player's death. This should be possible, but would not be reflected in the succession window and would require a few other things like enabling heir designation.
    - Making a custom elective succession law with only one elector (the player) and applying it to every player owned title. I believe this should be possible, but I think the player heir would still be forced to follow the primary title.    

Summary of above:
@Hendrixx
Good concept and it makes sense logically (applying real-world logic).
The challenges I see are based on how the game works.
- I would imagine the mechanic would feel good when the player is receiving the elected title, but could lead to frustration or game over if the player is losing the elected title. This could be mitigated by adding in a game rule to make it asymmetric.
- Implementing it as a mod would be somewhat difficult due to some limited modding access to succession, but I can think of two approaches that might work.
If you want I could look into it more, but it might take me a while to get to it.

@vargasax23
I understand that border gore due to AI inheritance can be frustrating or look bad, but I personally do not mind it much as I tend to focus mostly on my realm when playing the game. Because of this, I think it is unlikely I will create a mod which will improve the situation, and even if I were to try to do that it would be very difficult as the border gore is the result of some core game mechanics. The only thing I can think of now which might help is the enclave independence game rule.
@vargasax23
As far as the example you gave with the king and their child, I agree that titles you granted to potential heirs should probably be taken into account when considering their inheritance. However, I don't know how one would go about adding it into the game with a mod. Much of succession is hardcoded and inaccessible to mods, so I don't think a mod can make the game consider the titles you granted the character as inherited when it comes time for succession. The only way I could see of doing it would be bypassing and reimplementing the succession system for players, which would be a lot of work. I think the best way to try to get this or something similar in the game would be to make a suggestion on the [url=https://forum.paradoxplaza.com/forum/forums/crusader-kings-iii-suggestions.1082/] CKIII Paradox Forum [/url]
@vargasax23
I have been considering making a mod for assigning titles to specific characters either on death or in a will before death and can think of two possible approaches to implement this. If I do implement this I would most likely do so in a different (possibly incompatible) mod as it would behave very differently from core titles.

    

- For the suggestions about assigning titles to specific characters on death or in a will, or making the game consider granted titles when assigning titles for succession I don't think a mod can implement them without bypassing the succession system in the game for the player. Mods have very limited ability to modify succesion with most of it being hard coded. It would probably be possible, but would take a lot of work. I have thought about the player assigning titles on succession before, but don't think I am likely to pursue it in the near future. I think the best way to try to get this or something similar in the game would be to make a suggestion on the CKIII Paradox Forum https://forum.paradoxplaza.com/forum/forums/crusader-kings-iii-suggestions.1082/

border gore due to inheritance by AI
child of equal tier who recieved a title inheriting more titles. <- Have to look into this.
Assigning specific titles to specific heirs(on death or while alive)


Elective laws for succession - essentially designate inheritor.
- can_title_have_law_general_trigger changed to allow counties and baronies, or changed only for new law. <- law_triggers
- New election type, only holder is elector, possible characters are all. <- succession_election/
- New title succession law <- laws/title_succession_laws
    - can have = player
    - can_pass = standard
    - can_title_have = custom allowing all titles
    - pass and revoke cost - tbd
- Heir designation as any of dynasty
    - allow heir designation for all.
    - on death grant primary tier title, make primary, revoke after succession
        - To make succession work make old primary title core. (currently looks like mod is compatible, and this will do nothing if primary title has title succession law)
        - This will still throw succession out of whack (number of highest tier titles will change). It will also not allow one to become vassal of primary title heir.
        - Needed to solve situation where desired heir is set to become vassal to character of your dynasty who will inherit the primary title. <- need to check if this is actually problem
        - Possibly forcibly vassilize
- Possible method:
    - give all titles in realm title law matching realm succession law (unless their title law has been changed manually or by event)
    - add flag/variable to titles which have different succession designated.
    - Still need to deal with how to play as a character who is not primary heir when they are of your dynasty. Will need to look into interaction of designating succession.

Possibly advise also using non-dynastic succession mod as well. <- might have to look into to see if it only triggers if there is an invalid heir.


Switching back to looking at AI using core titles.
Copied from above.
How would the AI designate titles? <- either fill out capital duchy and then move to next duchy or core titles with most income/levies or combination.
^ For overtime will make them always go up to the cap (possibly change for tribal) (possibly add exception if it would put them at negative prestige gain).
^ How to deal with cost when cores have a cost? <- AI probably has way to decide when to spend gold, should mirror that except for prestige.
When would AI re-evaluate core titles?
- Some set time period (quarter to 5 years)
- When they aquire a title
- Problem again of when capital or primary title changes. <- This needs to be dealt with by time period. Possible solution is cache these titles and check if they changed each quarter. This would be more performance friendly than re-evaluating each quarter. Could probably do the same thing for recalculating cores.
- For flat cost how does the AI decide when it is worth it to de-core and re-core? For now will do stupid behavior - Will only do it if they have enough prestige, but will always try.

How to implement?
Events have AI weights
is_ai trigger exists
Can use AI (personality values) to weight things like lists
Decisions have AI will do, check frequency, if it is a goal, and chance of doing.
exists short_term_gold
character interactions have ai_potential, and I assume others.
I only see short_term_gold, not short_term_prestige. Might have to just manually implement.
AI has men at arms prestige expense goal and max

I think I will use a list and weight the different titles.
I will probably need to use multiple lists.
duchy -> kingdom -> empire
^ will need to exclude or have logic for ignoring other titles.
in list weight levies and gold produced. Also add weight to duchy capitals and counties with special building slots.
Ordered list ordered by scripted modifier as in line above.
Add core titles up to core limit and as long as prestige is above 0/prestige gain is above 0.6 times total.
One list, add weight to capital/primary title titles.

2 systems for determining when:
- Limit to core limit or price.
- keep track of total count - check if core, if yes count + do nothing. If no, core, count +.
- after done de-core all other titles.
- at beginning calculate budget count
Flat:
    - > amount determined by tier.
        - count: medium
        - duke: major
        - king: massive
        - emperor: massive
    - * multiplier for tribal - 1.5 <- arbitrarily chosen
    - Only will do down to amount (need check when looking to core).
    - If not at limit, will not de-core others.
    - For budget count do not count if it was not cored.
Overtime:
    - < percent allocated<- arbitrarily deciding on 20% (1/2 goal for man at arms)
    - / multiplier for tribal  - 1.5 <- arbitrarily chosen
    - Will always de-core others.
    
Tasks:
- scripted value for flat amount reserved
- scripted value for tribal multiplier
- scripted value for percent allocated
- scripted modifier? for title priority
- scripted effect for coring

calculation for title priority:
- Only consider when it is a leaf title.
- Don't consider titles which are not county or primary title tier. (no reason to keep these titles)
- +1000 for capital duchy
- +500 for capital kingdom
- +250 for capital empire
- +500 for under primary title
- +x*levies from county
- +y*gold from county
Because the tiers stack, duchy will give 500, kingdom will give 250 and empire will give 250. Could also do else if, but I like this better.

Values I need to find:
- character's current prestige
- character's current prestige gain
- character's prestige gain excluding core titles <- can ignore this and simply de-core and re-core every time recalculating for overtime.
- levies from county (might need to sum over baronies)
- gold from county (might need to sum over boundaries)

custom_automated_stats.log sounds awesome. I wonder if I could write to it.
need to be careful about de-coring all (might trigger titles de-cored alert even if it is triggered for AI)
.gold might work <- gold does work *as a trigger* for comparison (for a character)
prestige exists as a trigger value for comparison.
exists building_levies and building_garison. Amount in county or province from buildings.
exists monthly_income for a province
exists development_level for a county
exists highest_held_title_tier (I think I have had some trouble with this in the past)
exist monthly_character_balance, monthly_character_expenses, and monthly_character_income. I assume that all of them are for gold.

Values I could not find (or at least find substitute for):
- current prestige gain
^ Opened Github issue. Will determine work around.
For overtime cost, make the AI go up to their core limit cap
Separate core limit cap for AI? - Relevant especially on ludicrous.

The will stuff should definitely be made as a different mod. It is hopeful that it will be compatible.

Tasks:
- scripted value for flat amount reserved
- scripted value for tribal multiplier
- scripted modifier? for title priority - Would probably work, but I will be using a scripted value.
- scripted effect for coring

Ordered has limit as well as order_by
Assuming that using duchy, kingdom, empire on a title give the de-jure lieges. If not then I will need to change code. Will have to test this.
Assuming that building_levies is for whole county not just capital barony. Will have to test this.
from wiki for feudal characters development increases levies and tax by 0.5% Will have to see if this is taken into account for building_levies or monthly_income.
In 00_defines.txt there are these two values (100 is max development):
LEVIES_AT_MAX_COUNTY_DEVELOPMENT = 0.5
TAX_AT_MAX_COUNTY_DEVELOPMENT = 0.5
^ Unsure if I can reference these values. For now I will just hard code it.
Need to check if multipliers like development are already being accounted for in monthly_income.
There is every_province, but it is only used in the code with the scope of faith.

For title priority want to take into account vassal income for titles of primary title tier.
Need to deal with primary tier titles with counties or other lower titles beneath them.
Will add new game rule wide or narrow core titles.

checking the approximate order of magnitude of levies and income. Will have to check how values I have access to in the code compare.
1066 - tax income for a barony appears to be around 1.25-3.34
1066 - levies for a barony appear to be around 75 - 700 with outliers like constantinople with 2101
867 - tax income for a barony appears to be around 0.5-2.7 tend to be about 1.5
867 - levies for a barony appear to be around 75 - 500 with ouliers like constantinople with 1486

Want levies and taxes to be approximately equally valued. Want their cap to be slightly above 250 - not enough to overcome de-jure priority except in rare cases.

These numbers should probably be dynamic with year, but that adds to much complexity for now.
The numbers should not pass 500.
Also have to deal with multiple baronies. Counties can have up to 8 baronies
want each to be scaled to be less than 125 with some exceptions for high values.
Will assume that max tax for a single barony would be about 7.5 or so.
Will assume that max levies for a single barony would be about 5000 or so.
This gives a maximum for a county of about 60 for tax and 40000 for levies.
Ideally would use logarithm or the like for the scale.
Will use poor man's version. Will use one coefficient and then cap it at about 225. I will then use a different coefficient and cap it at 250

Will consider 1250 levies to be a good number to map to 125.
Will consider 3 income to be a good number to map to 125. (might change from 3 if a different number makes the math easier)
I would consider 10000 levies to be about the number I would want to map to 250
I would consider 10 income to be a good number to map to 250

pass 1: levy multiplier of 0.1 capped at 125. Then levy multiplier of 0.01 capped at 250.
100 -> 10 + 1 = 11
500 -> 50 + 5 = 55
700 -> 70 + 7 = 77
1000 -> 100 + 10 = 110
1250 -> 125 + 12.5 = 137.5
12500 -> 125 + 125 = 250
^ seems about right.

pass 1: tax multiplier of 40 capped at 125 then tax multiplier of 12 capped at 250
1 -> 40 + 12 = 52
2 -> 80 + 24 = 124
3 -> 120 + 36 = 156
4 -> 125 + 48 = 173
5 -> 125 + 60 = 185
10 -> 125 + 120 = 245
10 5/12 -> 125 + 125 = 250
^ Low numbers are scoring too high.
pass 2: tax multiplier of 35 capped at 125 then tax multiplier of 8 capped at 250
1 -> 35 + 8 = 43
2 -> 70 + 16 = 86
3 -> 105 + 24 = 129
4 -> 125 + 32 = 157
5 -> 125 + 40 = 165
10 -> 125 + 80 = 205
15 -> 125 + 120 = 245
15.625 -> 125 + 125 = 250
^ looks good.

for low numbers I need to think of both multipliers together (they work additively up to the first cap)
Might want to change cap to 502. Will change combined cap to 502 to allow for extremely good counties in kingdom to overcome duchy.
Final values (for now)
levy multipliers: 0.1 capped at 125, 0.01 capped at 126
tax multipliers: 35 capped at 125, 8 capped at 250

************* Need to add logic to core title of minimum tier under cored high tier title under wide ai strategy.******

Tasks:
- create AI coring effect
- add in calls to said effect
- update workshop description
- localization

NOT_has_variable_trigger - noticed in a video of this mod. Will have to loook into (in fact it looks like the conditions are broken)
***************Need to swap AI to using ai core title limit**********************
^ will do by modifying core limit scripted value.

local variables can be referenced with local_var:name

To core titles of minimum tier under high tier title under wide ai strategy will core when it has no cost/does not count to core limit - under wide lower titles will be encountered after primary tier.
will cache budgeted cores as otherwise prestige might be gained from dedesignating cores which will core out of order.
Need to also run if ai is over core limit.
Will I ever run into a situation where I run into a higher tier core title before its child?
Order under wide:
primary tier
county
duchy
kingdom
empire

Order under narrow:
county
primary tier
duchy
kingdom
empire

problem: primary_tier + lower tiers already cored will lead to lower tier titles possibly being de-cored and possible over core limit
primary tier and none below it will not lead to problems - primary tier is core leaf & others encountered after. (or encountered before and cored)

primary tier + title below it ->
if primary tier is core it will not be a leaf and not count to core limit. This could lead to being out of core limit by the time it comes to lower titles. These would then be de-cored and leave character over core limit due to primary tier title.
need to essentially reserve space in core limit for primary title in this case - but this might be unecessary if under narrow strategy.
to do this will add in primary tier reserve - if it is of primary tier, is a core, but does not count to core limit it will be added to this and core_counter will be incremented
If a core title has a parent in primary tier reserve, it removes the title from the reserve and nothing is incremented.
If a non-core title has a parent in primary tier reserve, it is cored, possibly adds to designated core count, and the title is removed from the reserve.

will add in very narrow:
only considers counties

variable_list_size can be used to compare the size of the list like this:
variable_list_size = {
    name = v_name
    value > x
}

Exists is_target_in_variable_list = {name = v_name target = scope}
can use add_to_local_variable_list (I believe)
exists has_variable_list

New problem if telling when a primary title is before its children.

primary_reserve -> parent reserve
Should it check parents or children?
parent: - most likely fewer titles above
children: - if have the limit for it will most likely not have many titles below.

I prefer checking parents.

Add titles of non-county tier to parent_reserve.
check for parent in parent_reserve. (also add check for the list not being empty)
if in reserve, if no children add to 

change from parent_reserve to list_to_core
when coring, check for parent in to_core, if so replace elemnt of to_core. Otherwise add to to_core.
At end core all titles in to_core which are not already cores.


core?, count to limit?, cost to core?, 
cost, limit, core:
yes,   yes,  yes: check limit, check budget
no,    yes,  yes: check limit
yes,    no,  yes: check budget
no,     no,  yes: core
yes,   yes,   no:
no,    yes,   no:
yes,    no,   no:
no,     no,   no:
Being core is irrelevant here. Will just use the limit and cost
This chart is asking the questions about the cores situation at that point in re-coring (if cores were reset)

problem with full de-core and re-core is that AI would be able to swap core titles for free.

with check for de-core eligibility cannot de-core titles which are not core leaves
after limit is reached de-core rest of titles
Possible senarios:
- child is core title: add in check for if that title can be de-cored to deal with this (need to deal with if child will be eventually de-cored)
- parent is core title with child cores: still de-core (need to be sure other cores will be kept)
- parent is core title with no child cores: core as it will have no cost and not count to the limit

Assuming blank slate, everything works. Problems arise from existing cores.
possibly create new triggers which work with if the title is core in blank slate senario (can keep track of core titles with a list) - not really feasible - would take too much coding
Only going up tiers: county, duchy, kingdom, empire. Higher tiers will be core already due to lower tiers unless they have no children. Problems will only arise if higher tiers are previously a core and have no children. In that case the title will not show up as having a cost to core (though it will still show up as counting to the core limit). - In this case not a problem. It actually does not have a cost to core. In this version I would use counting to core limit as opposed to adding to core limit and it should work out.
Mixed tiers: county, kingdom, duchy - counties cored first. No problems there. Problems if kingdom shows up as core due to a duchy which will not have been set for coring yet. If that duchy is then de-cored the character will not be guaranteed to lose the core limit impact.

Mixed tiers will not cause a problem due to cost, only with core limit.
Only primary tier titles are out of order, so only they should be in reserve - name back tp primary_tier_reserve
wide -> in reserve always (unless counties optional)
narrow -> in reserve unless child county is core

accuracy of counting to limit and costing to core?
using will_coring_have_cost - accurate to current situation if not already core.
using does_core_count_to_limit - innacturate for primary tier titles. will have to manually increment in that case and pass on incrementing if parent in reserve. Need check for is_titular in this case. Due to note below also need to add check for is_title_de_jure_above_capital.

Need to consider primary tier above capital! - has a cost, but will not count to core limit.

Will do budget checks in step where looking to actually core. (might want to short-circuit?)
* = prestige budget check

Will put auto-cores at top of list (will allow for accurate core limit budgeting)

if county game rule check:
    if does_core_count_to_limit:
        if parent in reserve:
            core title if not already core*, remove parent from reserve.
        else if has room in limit:
            #if primary tier and (wide or (narrow and no child county cores)) # not actually necessary - child farther along which will not have cost or count to core limit.
            #    add to primary reserve
            core title if not already core*, increment core limit budget
        else: # no room in limit
            de-designate core if possible
    else if title is primary tier:
        if has room in limit:
            if wide or (narrow and no child county cores)
                core if not already core*, increment core limit budget, add to primary reserve
        else:
            de-designate core if possible
    else:
        core title if not already core*

What if a county with higher priority is not cored because sibling is currently core, but is a lower priority? - Will not happen due to using does_count_to_core_limit which only considers titular status and if it has child cores. Both that core and its sibling will have the same core limit cost truth value. The difference will be in prestige cost which is how it should be.

coring trigger including budget:
(is_core = no and and will_coring_have_cost = yes and cost_num < budget)
increment limit if that or is core

Will make change to decrementing budget variables.

what if can't de-designate core primary tier titles due to children being core?
need to recursively de-designate core titles in that case

really should be using does_coring_have_cost for flat and does_core_have_cost for overtime

conditions for a core having a cost
1. game rule is not no cost
2. ancestor is not a core leaf-ish (has a cost)
3. not both game rule is flat cost and the title is a core

When will a title with a parent in the primary tier reserve not have the budget to be cored?
- other child which is lower priority is already a core.
^ how to deal with this situation?
- flat - leave as is and do not remove primary tier title from primary tier reserve list. This way the lower priority already core child will be assigned the core limit room and budget will be met
- overtime - core the title and leave the lower priority core title to be de-cored.
What will happen if I deal with overtime cores like flat cores as described above?
- priority will never be swapped
with overtime will_coring_have_cost's function here should be replaced by does_core_have_cost - no because the cost of a parent core can be passed down to a child. will_coring_have_cost is still proper.



recursively de-coring parents to a fork

Do not see "continue" for ordered_this_title_or_de_jure_above
if one cannot de-core a title, one cannot de-core it's parents - parents of core titles can never be de-cored unless they are the primary tier title above the capital county
If a title cannot be de-cored, I will count it as hitting a core fork.

call the ai_manage_cores effect when previously would recalculate cores and:
and
    the character is an ai
    or
        or
            flat and spare budget 
            overtime (currently overtime will always have spare budget)
        over core budget

Might need to check if characters who lose titles still have any titles. - do not have to for recalculating cores. Most likely do for ai mangagement of cores.

exists has_primary_title and has_title trigger
exists is_landless_ruler and is_ruler triggers
exists holds_landed_title and is_landed triggers - appear to be equivalent

* Making the decision that if a character is no longer landed then they should no longer be cared about when it comes to recalculating cores
* Making the decision that if a character is not of tier at least count then they should no longer be cared about when it comes to recalculating cores
^ these are similar but not exactly like the conditions for being playable - Theocracies and republics should still care about cores
exists trigger highest_held_title_tier

Possible Godherja compatability patch - things which need to be checked are on_actions and window_character.gui
Possibly add in event to display some core title information to aid information availability for mods which change the character window.

Testing:

Broken toast icon for over core limit
Broken core limit calculation for player (0 when it should be 3)- same bug for AI.
^ nothing in the error log for either of these
Problem for broken core limit might be that there is an implied AND for limits, not an implied OR

Localization to do:
Game rules
Update encyclopedia
ai_manage_cores_interaction


for king of lotharingia, county of vaucouleurs should have been cored before county of bar
^ most likely due to problem with considering all baronies as opposed to just those you own.
Loud error about local_var not being set


set_variable = {
    name = from_county
    value = building_levies
}

set_variable = {
    name = from_provinces
    value = {
        value = 0
        every_county_province = {
            limit = {barony.holder = county.holder}
            add = 1
        }
    }
}

barony.holder = county.holder works for castles, but not for churches. still need to test republics
for temples need to use lessee instead of holder.
need to check if the barony is_leased_out

set_variable = {
    name = from_county
    value = building_levies
}

set_variable = {
    name = from_provinces
    value = {
        value = 0
        every_county_province = {
            limit = {
                OR = {
                    AND = {
                        barony = {is_leased_out = no}
                        barony.holder = county.holder
                    }
                    AND = {
                        barony = {is_leased_out = yes}
                        barony.lessee = county.holder
                    }
                }
            }
            add = 1
        }
    }
}

Still need to look into loud error

The problem appears to be something along the lines of variables not being available to use in triggers
^ it looks like the comparison still occurs, it just throws an error.
Looking farther it appears that the variable is not seen (at least by the error logging as being defined until later)
It looks like the error logging does not count variables as being defined if they are re-used within the same top scope. Does not seem to be a problem in actuality.

Want:
if (player_rule and (not_ai or player_match)) or (ai and ai_rule)
currently:
if (not_ai and player_rule) or (ai and ai_rule)

for commit:
- adding player_matching_ai core limit.

King of France 867 - when doing ai coring gains 150 prestige and nothing is cored.
Samanid - no change in prestive or coring of titles.
Bug is in de-designating some things (perhaps too agressively)
Error logging is the faulty part
in if statements limits have implied ANDs
Suspect that problem is due to running over baronies as well. Will add to limit.

possible bug when observing: core limit is displayed as 0 in core titles tab of character window. Behind the scenes seems to be working - no over core limit modifiers, and the correct number of cores counting to the limit.

Game speed 5 for 1 minute from 867 observing:
ai narrow coring: 873-8-10
ai coring off: 874-1-1

Seems to be some performance impact, but does not look too significant- 6-2/3 years to 7 years (some of which is most likely due to human error) 20/21 or about 95% of the speed.

Things seem to be working

Errors due to what looks like characters without capitals having core_count called on them (calls trigger is_title_core)
[character.cpp:194]: Character 'null' is not valid in 'TitleRelationToMe' - possibly due to being observer?
Assertion failed: assert_if has triggered an assert: check_auto_core_title: County title passed. They should never be created, and that is currently the only entry point. - unsure where this occured - could possibly occur if the top barony in the county changed?
faulty error appears to be raised less than expected.

County title and capital barony title are actually seperate titles, it is just that the capital barony title is inaccessible in game.

Localization to do:
xGame rules
xUpdate encyclopedia
xai_manage_cores_interaction

Additional documentation:
description - clean up and make fancy

Raise question of whether people want me to give option to apply ai coring logic to the players.
Might at least want to make decision to trigger it.

Next update: add decision/event interface with mod to increase mod compatability.
Need to test changing ai coring game rule in save game.
possible problem with county only core strategy: cores county then loses county. Duchy above is still core, but will not be de-cored. Will have to fix bug.
^ add in if gamerule and not county, attempt to de-core. - what about primary tier title above capital? - will not be considered. Could lead to border gore.
should it be if gamerule and not county de-core if ongoing cost or counts to limit?
For that gamerule order will always be non-cti -> county -> duchy -> kingdom -> empire
Will still need two passes in order to correct mistake.

if counts_to_core_limit or ongoing_cost:
de-designate (non-recursive)
else:
pass


recalculate_cores interaction disappeared for player character. - looks like a localization error (proabably forgot to change the key in localization file)

Over core leaf limit alerg icon is bugged (looks to be too large/offset)
Fixed icon bug


What to do with non-partition succession? all titles core?

Still TODO before update:
- Test more
    - Test different gamerules
    - Test changing gamerules in save file
- Debug or make known:
    - xobserver core limit 0 display bug
    - faulty errors - also submit bug report on it
- Clean up description
    - bump version
    - update README
    - trim down fluff/redundant info
    - add in steam formatting
    - add section on AI behavior
    - add section on next updates (and clean up some) - mention adding decision based interface for mod compatability
    - Emphasize in game encyclopedia
    - Emphasize titles are designated through title window
- Community outreach
    - xask if there should be a decision to auto core player titles like the AI does.


core limit for display should be set when clicking to expand the core titles tab.
Will check to see if the variable is set if I have not clicked when playing. - working as intended. It looks like the observer does not trigger effects leading to this bug. Do I want to set the variable elsewhere as well? - yes will set when recalculating core titles as well. Should at least give some value even if it might be outdated.

Automation of Player Cores?

I am most of the way done with adding in AI designation of cores. I was wondering if I could have some feedback on the inclusion of some features. I am hesitant to add them because I already include a lot of game rules/player options and am worried it might become to much to the point of being overwhelming. The specific features are:
1. Giving the player the option to run the AI coring process on themselves through a decision.
2. Giving the player the option to have cores managed automatically for them in the same way the AI manages cores.
The reasoning behind including 1 is that a player might suddenly have a lot of new/different titles and want to have at least the initial designation done automatically.
The reasoning behind including 2 is that players might not want to have to think about core titles and instead just want them to be managed in the background.
Personally I don't think I would use either feature when playing, but I am not your average person - I have thought a lot about core titles and am heavily biased towards managing them myself.


King Arnulf of East Francia - only non-cti cores. Every time ai_manage_cores is run on him he gains 75 prestige, but does not core anything new. - for context coring costs 150 and refunding a core gives 75
game rule is wide.
Are title law titles causing the problem? - cannot be cored but might be encountered.
problem still occured even with title law removed.
Even with faulty de_designate removed, kingdom of bavaria is left as a core leaf instead of a child county being cored. - looks like primary title reserve is not working as intended - behavior could be explained by titles not being taken care of by that.
 - not quite would still get another core due to having room in the core limit for one more.
I just noticed that I actually never add to the primary_tier_reserve.
To fix put if for primary titles before if for core counting to limit.

checks on counting to limit - parent in primary_tier_reserve or has budget to do stuff
checks on primary_tier - room in core limit and budget, with check for child county cores as well.

what is happening now:
bavaria is tripping counting to limit. Nothing is added to primary_tier_reserve. Core limit left -> 1. Unsure what happened to the core limit.
What I think should have happened: budget not problem. capital takes 1 core limit. non-cti cores done (capital, duchy, primary in chain). Bavaria takes 1 core limit. Next would be county under primary title - this should take last core limit. Finally counties under Bavaria are hit and de_designate parents. Then duchies and same happens. Unsure why county under capital does not appear as a core at the end. Also unsure why 75 prestige is gained.
Will come back to later. test_game_2 has example.

Will have to deal with title laws. - added to limit on loop
Add deference to county priority when primary tier is county tier. - dealt with by having county tier check before the primary tier check.

Single heir inheritance reduce core cost - TODO

Should not check for budget with primary tier parent - budget already allocated.
Believe I have fixed problems with primary tier reserve.
Some small bugs, but everything seems to be working.
Will add 1/4 domain limit option and then call code good.

Dealing with single heir inheritance:
- reduce cost to core
- AI will change to acting like county only coring
- AI will not core if there is no core county benefit
single heir + no core county benefit = do not core
core with partition or core county benefit

Need to think about scopes for the dynamic values
Exists `switch` unsure of how to use, but looks useful.
I don't see a trigger for checking what type of scope is being passed.
I could artificially enforce one of the scopes to be passed in.
^ I will enforce a character being passed in because it varies depending on the character's realm laws.
Need to check if holder.value works

need to look into duchess matilda of tuscany not having duchy of tuscany as a core
holder.value_name works
Reason for duchy of tuscany not being a core title is because its heir is not of the same dynasty and it is the primary title. - For the most part this is a moot point.
This does nor effect gameplay except for if one is a count with no heir (I think also a different primary title and capital). Will raise issue in github but leave problem be.

character scope is actually being passed - the text is actually used in core_change_effect where the scope is character
^ this makes me see why this worked when adding to a variable list, but not when passing.
Designating a title core for some reason does not have a cost (even though it does display the correct cost in the tooltip)
It also looks like the correct cost is being used for calculating the budget for core titles.
The problem is I am coring the title before applying the cost. I should do it the other way around.

Due to exploit for infinite prestige found with primary titles with no heirs not being core, I need to fix it.

reason for problem: when coring up it looks like primary title is cored - need to check why this is happening.
Thinking about senarios where primary title has a heir of a different dynasty:
- No player heir
- 1st child of other dynasty, subsequent of mine
- title law

The 2nd and third cases should most likely be treated similarly. Need to check behavior in 2nd case.
2nd senario core titles do not work - primary heir is not player heir.
In case where primary heir is not player heir it only works "nicely" if the primary title is elective.
Need to stop coring primary tier title with title law/other problems

primary title has law -> same dynasty = works.
primary title has law -> different dynasty works (but have to prevent coring primary tier title)
no player heirs -> moot except for core county benefits. Do not consider them to be worth granting the ability to core over (for example look at titles under non-primary title laws)
player heir is not primary heir and no title law -> core titles go to primary heir.

Guess as to why this happens: primary heir is determined by realm succession laws. Title laws are outside of this.
To fix:
- prevent coring of primary tier title
- prevent coring if primary heir != player heir (might be better way to deal with things for primary title overall)

Still TODO before update:
- Test more
    - Test different gamerules
    - Test changing gamerules in save file
        - change removing modifiers for provinces to always occur to allow for removal of mod.
- Debug or make known:
    - primary title with non-primary heir
    - faulty errors - also submit bug report on it
    - bug report on misnomer of always_follows_primary_heir
- Clean up description
    - xbump version
    - xupdate README
    - trim down fluff/redundant info
    - add in steam formatting
    - add section on AI behavior
    - add section on next updates (and clean up some) - mention adding decision based interface for mod compatability
    - Emphasize in game encyclopedia
    - Emphasize titles are designated through title window
- Community outreach
    - 
    
Matilda of tuscany - senario looked at above has player heir != primary heir (characters as expected)
Same is true for Kaiser Heinrich, but core titles work. - always_follows_primary_heir is definitely a misnomer. It more accurately always follows the realm succession heir (seen instances of it following inheritor of first title in list. This is not necessarily the player heir) unless the primary heir is also the player heir. 

Need to deal with funky logic. Will warn about cases where title order means core titles are funky (will not at this point add in a check for it). At some point might add in a warning saying that core titles might not follow the player heir.

Increasing ludicrous limit to 100000. Reason is that https://steamcommunity.com/sharedfiles/filedetails/?id=2299077068&searchtext=earth has about 16000 provinces.
Should add warning about core titles possibly not going to player heir - possible future feature.
There is a concept in the encyclopedia for a realm heir, but I do not see how I would get it. It also does not seem to map exactly to who will inherit core titles.

localization #xxx text# meanings (formatting queues) looks like it is not case sensitive
different queues can be separated by ;
EMP, emp, emphasis: emphasis
T: tooltip?
warning: warning (red and italics I think)
bold: bold
D, DEBUG: debug (purple and italic)
weak: weak (lighter colored and italic I think)
V: value?
high: ?
medium: ?
difficulty_easy: ?
difficulty_hard: ?
difficulty_medium: ?
P, positive_value: green
N, negative_value: red
I?, italic: italic
low: ?
X: disallowed? (lighter color and italic?)
TOOLTIP:NUMBER_OF_MEN_DESC: self descriptive (?)
indent_newline:2: ?
attacker_color: ?
defender_color: ?
S: tooltip subheader?
F, flavor?: ?
tooltip:$TOOLTIP$: seems to be wildcard. Maybe flavors of tooltips.
credits_title: credits title (?)
credits_subheader: credits subheader (?)
credits_header: credits header (?)
Z: health value slightly negative (parchment color)

some of these are found in gui\shared\fonts.gui
could look into gui\shared\colors.gui
Also seem some in jomini\gui\jomini\basetextformatting.gui <- this one
Also gui/textformatting.gui <- actually base it off this one.
looks like formatting tags are actually #TAG text#!


Things left to do:
- Test more
    - Test different gamerules (will probably not do as much of this as I should)
    - Test changing gamerules in save file - This is critical information
        - xchange removing modifiers for provinces to always occur to allow for removal of mod (add new effects and add to on game start on_action)
- Debug or make known:
    - primary title with non-primary heir - document problems
    - faulty errors for variables - submit bug report
    - bug report on misnomer of always_follows_primary_heir
- Clean up description
    - trim down fluff/redundant info
    - add in steam formatting
    - add section on AI behavior
    - add section on next updates (and clean up some) - mention adding decision based interface for mod compatability
    - Emphasize in game encyclopedia
    - Emphasize titles are designated through title window
    
Changing ovetime cost to reduce when out of partition.
I think I ran into a problem using scripted values as modifiers. Changing to apply different modfiers.
Don't see on_action for changing realm law. - will need to add this to bugs.
Will need to test overtime cost things.
Likely bug when first changing over between partition and non-partition.


Unable to designate core due to title.
All of these:
Complex blocker
x is_head_of_faith missing perspective
x title ineligibility

