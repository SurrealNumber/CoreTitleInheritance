# All scopes are titles unless otherwise noted.

is_title_de_jure_above_capital = { # scope is title
    custom_description = {
        text = "title_de_jure_above_capital_trigger"
        trigger_if = {
            limit = {exists = holder}
            OR = {
                holder.capital_county = this # capital county
                is_de_jure_liege_or_above_target = holder.capital_county
            }
        }
        trigger_else = {
            always = no
        }
    }
}

is_title_core_due_to_capital = { # scope is title
    is_title_de_jure_above_capital = yes
    tier < holder.highest_held_title_tier # not the same tier as the primary title
}

is_title_special_core = { # Incomplete until I can see the always_follows_primary_heir tag. For now will have this category overrule title laws.
    is_head_of_faith = yes
}

has_any_title_law = { # scope is title (technically this means has a different title succession law than the realm succession law).
    custom_description = {
        text = "HAS_ANY_TITLE_LAW_TRIGGER"
        tier >= tier_duchy
        OR = {
            has_title_law_flag = elective_succession_law
            NOT = {
                trigger_if = {
                    limit = {has_title_law = male_only_law}
                    holder = {has_realm_law = male_only_law}
                }
                trigger_else_if = {
                    limit = {has_title_law = male_preference_law}
                    holder = {has_realm_law = male_preference_law}
                }
                trigger_else_if = {
                    limit = {has_title_law = equal_law}
                    holder = {has_realm_law = equal_law}
                }
                trigger_else_if = {
                    limit = {has_title_law = female_preference_law}
                    holder = {has_realm_law = female_only_law}
                }
                trigger_else = {
                    always = yes
                }
            }   
        }
    }
}

is_title_ineligible_due_to_title_law  = { # scope is title
    AND = {
        is_title_special_core = no # I am having special cores overrule the title law.
        custom_description = {
            text = "title_ineligible_due_to_title_law_trigger"
            save_temporary_scope_as = t_title
            OR = {
                AND = { # title is primary going to different dynasty
                    holder.primary_title = this # is primary
                    NOT = {current_heir.dynasty = holder.dynasty} #title heir is of different dynasty # have to investigate what this does with lowborn characters.
                }
                any_this_title_or_de_jure_above = {
                    trigger_if = { # should be an implied and
                        limit = {exists = holder}
                        holder = {has_title = scope:t_title} # held by owner
                        has_any_title_law = yes # title has a title law
                        OR = {
                            NOT = {holder.primary_title = this} # this title is not the primary title
                            AND = { # title is primary going to different dynasty and with peer title.
                                holder.primary_title = this # is primary
                                NOT = {current_heir.dynasty = holder.dynasty} #title heir is of different dynasty # have to investigate what this does with lowborn characters.
                                holder = { # other title of same tier as primary
                                    any_held_title = {
                                        tier = holder.primary_title.tier
                                        NOT = {holder.primary_title = this}
                                    }
                                }
                            }
                        }
                    }
                    trigger_else = {
                        always = no
                    }
                }
            }
        }
    }
}

is_title_core_due_to_not_cti = {# scope is title
    tier >= tier_county
    is_title_ineligible_due_to_title_law = no
    OR = {
        is_title_core_due_to_capital = yes
        holder.primary_title = this
        is_title_special_core = yes
    }
}

is_title_core = { # Assume that this will only be called if the title is owned
    custom_description = {
        text = "IS_TITLE_CORE"
        OR = {
            trigger_if = { # can't move this out to is_core_due_to_cti because there is overlap between the two statements.
                limit = {has_variable = core}
                tier >= tier_county
                var:core = yes
            }
            is_title_core_due_to_not_cti = yes
        }
    }
}

is_core_due_to_cti = {
    has_variable = core # This condition means that it is technically possible (though it should never happen) that a title is considered neither core due to cti or core due to not cti.
    is_title_core_due_to_not_cti = no
}

is_title_county = {
    tier = tier_county
}

#######################################################################################
######################## End of "Primative" triggers ##################################
#######################################################################################

is_title_eligible_for_core = { # Assume that this will only be called if the title is owned
    is_title_core = no # not a core title - will rule out core titles due to non-cti.
    is_title_ineligible_due_to_title_law = no
}

is_core_consistent = {# scope is title
    is_title_ineligible_due_to_title_law = no
}

has_child_core_excluding = {
    save_temporary_scope_as = c_title
    any_in_de_jure_hierarchy = {
        continue = {tier > tier_county} # hope this causes it to iterate through everything except baronies.
        NOT = {this = scope:c_title}
        NOT = {$EXCLUDED$ = this}
        holder = scope:c_title.holder # same owner. Getting strange bug (Failed context switch) so I am deviating from normal practice for this line.
        is_title_core = yes
    }
}

has_child_core = {
    save_temporary_scope_as = l_title
    has_child_core_excluding = {EXCLUDED = scope:l_title}# Will techinally double up on ignoring this title, but want code to only be in one place.
}

is_core_leaf_excluding = { # scope is title # also works with non-cores to check if they have core descendants
    NOT = {has_child_core_excluding = {EXCLUDED = $EXCLUDED$}}
}

is_core_leaf = { # scope is title # also works with non-cores to check if they have core descendants
    custom_description = {
        text = "IS_CORE_LEAF"
        save_temporary_scope_as = l_title
        is_core_leaf_excluding = {EXCLUDED = scope:l_title}# Will techinally double up on ignoring this title, but want code to only be in one place.
    }
}

does_core_have_cost = { # scope is title
    # is_titular = no # titular titles will have a cost.
    NOT = {has_game_rule = no_core_cost}
    is_core_due_to_cti = yes
    is_core_leaf = yes
}

does_core_have_cost_excluding = { # scope is title # Telling this to exclude itself does nothing.
    # is_titular = no # titular titles will have a cost.
    NOT = {has_game_rule = no_core_cost}
    is_core_due_to_cti = yes
    is_core_leaf_excluding = {EXCLUDED = $EXCLUDED$}
}

does_ancestor_have_cost = {
    save_temporary_scope_as = a_title
    any_this_title_or_de_jure_above = {
        holder = {has_title = scope:a_title}
        is_title_core = yes
        does_core_have_cost = yes
    }
}

does_ancestor_have_cost_excluding_self = {
    save_temporary_scope_as = a_title
    any_this_title_or_de_jure_above = {
        NOT = {this = scope:a_title}
        holder = scope:a_title.holder # same owner. Getting strange bug (Failed context switch) so I am deviating from normal practice for this line.
        is_title_core = yes
        does_core_have_cost_excluding = {EXCLUDED = scope:a_title}
    }
}

does_core_count_to_limit = { # scope is title
    #is_core_due_to_cti = yes # will count capital and primary title to core limit unless they are titular
    is_titular = no # will not count titular titles to core limit.
    is_core_leaf = yes
}

will_coring_have_cost = { # scope is title # can be called before or after title is cored.
    NOT = {has_game_rule = no_core_cost} # possibly a redundant check
    NAND = { # this is necessary to deal with titles at the top of a tree
        has_game_rule = flat_designate_core_cost
        is_title_core = yes
    }
    does_ancestor_have_cost_excluding_self = no
}

will_de_coring_give_refund = {
    custom_description = {
        text = "CORE_REFUND_TRIGGER"
        NOT = {
            save_temporary_scope_as = r_title# label in comments will assume that this title is a county
            trigger_if ={# duchy
                limit = {holder = {has_title = scope:r_title.de_jure_liege}}
                de_jure_liege = {is_core_leaf_excluding = {EXCLUDED = scope:r_title}}
            }
            trigger_else_if = {# kingdom
                limit = {holder = {has_title = scope:r_title.de_jure_liege.de_jure_liege}}
                de_jure_liege.de_jure_liege = {is_core_leaf_excluding = {EXCLUDED = scope:r_title}}
            }
            trigger_else_if = {# empire
                limit = {holder = {has_title = scope:r_title.de_jure_liege.de_jure_liege.de_jure_liege}}
                de_jure_liege.de_jure_liege.de_jure_liege = {is_core_leaf_excluding = {EXCLUDED = scope:r_title}}
            }
            trigger_else = {
                always = no
            }
        }
    }
}

is_over_core_limit = { # scope is character
    core_count > val_core_limit
}

# Different from the trigger contained within in case one wants to add a character restriction on coring titles. There used to be one that characters were not allowed to go over their core limit.
can_core_title = {
    is_title_eligible_for_core = yes
}

can_de_core_title = {
    is_title_core = yes
    is_core_due_to_cti = yes
    is_core_leaf = yes
}

has_core_titles = { # scope is character
    any_held_title = {
        is_title_core = yes
    }
}

should_recalculate_cores = { # scope is a character
    holds_landed_title = yes
    highest_held_title_tier >= tier_county
}
